{"ast":null,"code":"import \"antd/es/icon/style/css\";\nimport _Icon from \"antd/es/icon\";\nimport _classCallCheck from \"E:\\\\web\\\\copy_museum\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"E:\\\\web\\\\copy_museum\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"E:\\\\web\\\\copy_museum\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"E:\\\\web\\\\copy_museum\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"E:\\\\web\\\\copy_museum\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport \"antd/es/select/style/css\";\nimport _Select from \"antd/es/select\";\nvar _jsxFileName = \"E:\\\\web\\\\copy_museum\\\\src\\\\Components\\\\Common\\\\Title\\\\TitleDropDown.js\";\nimport React, { PureComponent } from \"react\";\nimport style from \"./TitleDropDown.module.css\";\nvar Option = _Select.Option;\n\nvar TitleDropDown =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  _inherits(TitleDropDown, _PureComponent);\n\n  function TitleDropDown(props) {\n    var _this;\n\n    _classCallCheck(this, TitleDropDown);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(TitleDropDown).call(this, props));\n\n    _this.handleChange = function (value) {\n      _this.props.history.push(_this.getPath(value));\n\n      _this.setState({\n        value: _this.getValue()\n      });\n    };\n\n    _this.getPath = function (value) {\n      for (var i = 0; i < _this.props.options.length; i++) {\n        if (value === _this.props.options[i].value) {\n          return _this.props.options[i].path;\n        }\n      }\n    };\n\n    _this.getValue = function () {\n      var path = _this.props.history.location.pathname;\n      console.log(path);\n\n      for (var i = 0; i < _this.props.options.length; i++) {\n        if (path === _this.props.options[i].path) {\n          return _this.props.options[i].value;\n        }\n      }\n\n      if (path.indexOf('buildingControl') > 0) {\n        return 'buildingControl';\n      }\n\n      return _this.props.options[0].value;\n    };\n\n    _this.state = {\n      value: _this.props.options[0].value\n    };\n    return _this;\n  }\n\n  _createClass(TitleDropDown, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.setState({\n        value: this.getValue()\n      });\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      if (this.props.path !== nextProps.path) {\n        this.setState({\n          value: this.getValue()\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var icon = React.createElement(_Icon, {\n        type: \"caret-down\",\n        style: {\n          color: \"rgb(0, 83, 229)\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      });\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(_Select, {\n        value: this.state.value,\n        size: \"small\",\n        suffixIcon: icon,\n        dropdownClassName: style.titleDropdownMenu,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, this.props.options.map(function (key) {\n        return React.createElement(Option, {\n          key: key.value,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64\n          },\n          __self: this\n        }, key.text);\n      })));\n    }\n  }]);\n\n  return TitleDropDown;\n}(PureComponent);\n\nexport default TitleDropDown;","map":{"version":3,"sources":["E:\\web\\copy_museum\\src\\Components\\Common\\Title\\TitleDropDown.js"],"names":["React","PureComponent","style","Option","TitleDropDown","props","handleChange","value","history","push","getPath","setState","getValue","i","options","length","path","location","pathname","console","log","indexOf","state","nextProps","icon","color","titleDropdownMenu","map","key","text"],"mappings":"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","sourcesContent":["import React, { PureComponent }  from \"react\";\r\nimport { Select, Icon } from 'antd';\r\nimport style from \"./TitleDropDown.module.css\";\r\nconst { Option } = Select;\r\n\r\nclass TitleDropDown extends PureComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n           value : this.props.options[0].value\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({value:this.getValue()});\r\n    }\r\n\r\n    handleChange = (value) => {\r\n        this.props.history.push(this.getPath(value));\r\n        this.setState({value:this.getValue()});\r\n    }\r\n\r\n    getPath = (value) => {\r\n        for(let i=0 ; i< this.props.options.length; i++){\r\n            if(value === this.props.options[i].value){\r\n                return this.props.options[i].path;\r\n            }\r\n        }\r\n    }\r\n\r\n    getValue = () => {\r\n        let path = this.props.history.location.pathname;\r\n        console.log(path);\r\n        for(let i=0; i< this.props.options.length; i++){\r\n            if(path === this.props.options[i].path){\r\n                return this.props.options[i].value;\r\n            }\r\n        }\r\n\r\n        if(path.indexOf('buildingControl') > 0){\r\n            return 'buildingControl';\r\n        }\r\n\r\n        return this.props.options[0].value;\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        if(this.props.path !== nextProps.path){\r\n            this.setState({value:this.getValue()});\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const icon = <Icon type=\"caret-down\" style={{ color: \"rgb(0, 83, 229)\" }} />\r\n        return (\r\n            <div>\r\n                <Select\r\n                    value={this.state.value}\r\n                    size=\"small\"\r\n                    suffixIcon={icon}\r\n                    dropdownClassName={style.titleDropdownMenu}\r\n                    onChange={this.handleChange}\r\n                >\r\n                    {this.props.options.map(key => (<Option key={key.value}>{key.text}</Option>))}\r\n                </Select>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default TitleDropDown;"]},"metadata":{},"sourceType":"module"}