{"ast":null,"code":"import _classCallCheck from \"E:\\\\web\\\\copy_museum\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"E:\\\\web\\\\copy_museum\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"E:\\\\web\\\\copy_museum\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"E:\\\\web\\\\copy_museum\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"E:\\\\web\\\\copy_museum\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"E:\\\\web\\\\copy_museum\\\\src\\\\Components\\\\BuildingOperation\\\\Control\\\\ChartLeft\\\\AirConditioningConcentration.js\";\nimport React from \"react\";\nimport ReactEcharts from 'echarts-for-react';\n\nvar AirConditioningConcentration =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(AirConditioningConcentration, _React$Component);\n\n  function AirConditioningConcentration(props) {\n    var _this;\n\n    _classCallCheck(this, AirConditioningConcentration);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AirConditioningConcentration).call(this, props));\n    _this.state = {};\n    return _this;\n  }\n\n  _createClass(AirConditioningConcentration, [{\n    key: \"getOption\",\n    value: function getOption(param) {\n      console.log(\"param>>\", param.data[0]);\n\n      var getDatas = function getDatas() {\n        var res = [];\n        res.push([{\n          value: param.data[0],\n          label: {\n            show: true,\n            position: \"center\",\n            verticalAlign: \"bottom\",\n            align: \"right\"\n          },\n          labelLine: {\n            show: false,\n            length: 0,\n            length2: 0\n          },\n          itemStyle: {\n            // normal: {\n            //     color: \"rgb(28,244,249)\"\n            // }\n            color: {\n              type: 'linear',\n              x: 0,\n              y: 0,\n              x2: 0,\n              y2: 1,\n              colorStops: [{\n                offset: 0,\n                color: \"rgb(11, 110, 233)\" // 0% 处的颜色\n\n              }, {\n                offset: 1,\n                color: \"rgb(28,244,249)\" // 100% 处的颜色\n\n              }],\n              globalCoord: true // 缺省为 false\n\n            }\n          }\n        }, {\n          value: 100 - param.data[0],\n          // name: 'invisible',\n          itemStyle: {\n            normal: {\n              color: \"rgba(233,233,233,0.1)\",\n              label: {\n                show: false\n              },\n              labelLine: {\n                show: false\n              }\n            },\n            emphasis: {\n              color: 'rgba(0,0,0,0)'\n            }\n          }\n        }]);\n        return res;\n      };\n\n      return {\n        width: \"100%\",\n        height: \"100%\",\n        tooltip: {\n          trigger: 'item',\n          formatter: \"{c}PPM\"\n        },\n        series: [{\n          name: 'AirConditionHumidity',\n          type: 'pie',\n          clockWise: false,\n          center: ['60%', '50%'],\n          radius: ['60%', '75%'],\n          avoidLabelOverlap: false,\n          //是否启用防止标签重叠策略\n          label: {\n            normal: {\n              show: true,\n              position: 'center'\n            }\n          },\n          data: getDatas()[0]\n        }]\n      };\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(ReactEcharts, {\n        option: this.getOption({\n          data: [25]\n        }),\n        style: {\n          width: \"100%\",\n          height: \"100%\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return AirConditioningConcentration;\n}(React.Component);\n\nexport default AirConditioningConcentration;","map":{"version":3,"sources":["E:\\web\\copy_museum\\src\\Components\\BuildingOperation\\Control\\ChartLeft\\AirConditioningConcentration.js"],"names":["React","ReactEcharts","AirConditioningConcentration","props","state","param","console","log","data","getDatas","res","push","value","label","show","position","verticalAlign","align","labelLine","length","length2","itemStyle","color","type","x","y","x2","y2","colorStops","offset","globalCoord","normal","emphasis","width","height","tooltip","trigger","formatter","series","name","clockWise","center","radius","avoidLabelOverlap","getOption","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport ReactEcharts from 'echarts-for-react';\r\n\r\nclass AirConditioningConcentration extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        };\r\n    }\r\n\r\n    getOption(param) {\r\n        console.log(\"param>>\", param.data[0]);\r\n        let getDatas = () => {\r\n            let res = [];\r\n            res.push([\r\n                {\r\n                    value: param.data[0],\r\n                    label: {\r\n                        show: true,\r\n                        position: \"center\",\r\n                        verticalAlign: \"bottom\",\r\n                        align: \"right\"\r\n                    },\r\n                    labelLine: {\r\n                        show: false,\r\n                        length: 0,\r\n                        length2: 0\r\n                    },\r\n                    itemStyle: {\r\n                        // normal: {\r\n                        //     color: \"rgb(28,244,249)\"\r\n                        // }\r\n                        color: {\r\n                            type: 'linear',\r\n                            x: 0,\r\n                            y: 0,\r\n                            x2: 0,\r\n                            y2: 1,\r\n                            colorStops: [{\r\n                                offset: 0, color: \"rgb(11, 110, 233)\" // 0% 处的颜色\r\n                            },\r\n                            {\r\n                                offset: 1, color: \"rgb(28,244,249)\" // 100% 处的颜色\r\n                            }],\r\n                            globalCoord: true // 缺省为 false\r\n                        }\r\n                    }\r\n                },\r\n                {\r\n                    value: 100 - param.data[0],\r\n                    // name: 'invisible',\r\n                    itemStyle: {\r\n                        normal: {\r\n                            color: \"rgba(233,233,233,0.1)\",\r\n                            label: { show: false },\r\n                            labelLine: { show: false }\r\n                        },\r\n                        emphasis: {\r\n                            color: 'rgba(0,0,0,0)'\r\n                        }\r\n                    }\r\n                }\r\n            ]);\r\n            return res;\r\n        }\r\n        return {\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n            tooltip: {\r\n                trigger: 'item',\r\n                formatter: \"{c}PPM\"\r\n            },\r\n            series: [\r\n                {\r\n                    name: 'AirConditionHumidity',\r\n                    type: 'pie',\r\n                    clockWise: false,\r\n                    center: ['60%', '50%'],\r\n                    radius: ['60%', '75%'],\r\n                    avoidLabelOverlap: false,  //是否启用防止标签重叠策略\r\n                    label: {\r\n                        normal: {\r\n                            show: true,\r\n                            position: 'center'\r\n                        }\r\n                    },\r\n                    data: getDatas()[0]\r\n                }\r\n            ]\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <ReactEcharts\r\n                option={this.getOption({ data: [25] })}\r\n                style={{ width: \"100%\", height: \"100%\" }}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nexport default AirConditioningConcentration;"]},"metadata":{},"sourceType":"module"}