{"ast":null,"code":"import _classCallCheck from \"E:\\\\web\\\\copy_museum\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"E:\\\\web\\\\copy_museum\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"E:\\\\web\\\\copy_museum\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"E:\\\\web\\\\copy_museum\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"E:\\\\web\\\\copy_museum\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"E:\\\\web\\\\copy_museum\\\\src\\\\Components\\\\BuildingOperation\\\\Control\\\\ChartRight\\\\MalfunctionQuantityEscalator.js\";\nimport React from \"react\";\nimport ReactEcharts from \"echarts-for-react\";\nimport echarts from 'echarts';\n\nvar MalfunctionQuantityEscalator =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(MalfunctionQuantityEscalator, _React$Component);\n\n  function MalfunctionQuantityEscalator(props) {\n    var _this;\n\n    _classCallCheck(this, MalfunctionQuantityEscalator);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MalfunctionQuantityEscalator).call(this, props));\n\n    _this.getOption = function (params) {\n      return {\n        width: \"60%\",\n        height: \"50%\",\n        grid: {\n          top: \"22%\",\n          left: \"23%\"\n        },\n        xAxis: {\n          type: 'category',\n          data: ['直梯', '扶梯'],\n          axisLabel: {\n            margin: 8,\n            fontSize: 10,\n            align: \"center\"\n          },\n          axisLine: {\n            lineStyle: {\n              color: \"rgba(0,83,229,1)\"\n            }\n          },\n          axisTick: {\n            show: false\n          }\n        },\n        yAxis: {\n          type: 'value',\n          name: \"数量\",\n          max: 1000,\n          min: 0,\n          boundaryGap: false,\n          axisLine: {\n            lineStyle: {\n              color: \"rgba(0,83,229,1)\"\n            }\n          },\n          splitLine: {\n            show: false\n          },\n          axisTick: {\n            show: false\n          }\n        },\n        series: [{\n          data: params.data,\n          type: 'bar',\n          label: {\n            show: \"true\",\n            position: \"top\",\n            color: \"rgb(28, 244, 249)\"\n          },\n          barMaxWidth: 15,\n          itemStyle: {\n            color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [{\n              offset: 0,\n              color: 'rgb(28,244,249)'\n            }, {\n              offset: 1,\n              color: 'rgb(0,83,229)'\n            }])\n          }\n        }]\n      };\n    };\n\n    _this.state = {};\n    return _this;\n  }\n\n  _createClass(MalfunctionQuantityEscalator, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(ReactEcharts, {\n        option: this.getOption({\n          data: [700, 800]\n        }),\n        style: {\n          height: \"85%\",\n          width: \"100%\",\n          marginTop: \"10%\",\n          marginLeft: \"10%\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return MalfunctionQuantityEscalator;\n}(React.Component);\n\nexport default MalfunctionQuantityEscalator;","map":{"version":3,"sources":["E:\\web\\copy_museum\\src\\Components\\BuildingOperation\\Control\\ChartRight\\MalfunctionQuantityEscalator.js"],"names":["React","ReactEcharts","echarts","MalfunctionQuantityEscalator","props","getOption","params","width","height","grid","top","left","xAxis","type","data","axisLabel","margin","fontSize","align","axisLine","lineStyle","color","axisTick","show","yAxis","name","max","min","boundaryGap","splitLine","series","label","position","barMaxWidth","itemStyle","graphic","LinearGradient","offset","state","marginTop","marginLeft","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,mBAAzB;AACA,OAAOC,OAAP,MAAoB,SAApB;;IAEMC,4B;;;;;AACF,wCAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,sGAAMA,KAAN;;AADe,UAKnBC,SALmB,GAKP,UAACC,MAAD,EAAY;AACpB,aAAO;AACHC,QAAAA,KAAK,EAAE,KADJ;AAEHC,QAAAA,MAAM,EAAE,KAFL;AAGHC,QAAAA,IAAI,EAAE;AACFC,UAAAA,GAAG,EAAE,KADH;AAEFC,UAAAA,IAAI,EAAE;AAFJ,SAHH;AAOHC,QAAAA,KAAK,EAAE;AACHC,UAAAA,IAAI,EAAE,UADH;AAEHC,UAAAA,IAAI,EAAE,CAAC,IAAD,EAAO,IAAP,CAFH;AAGHC,UAAAA,SAAS,EAAE;AACPC,YAAAA,MAAM,EAAE,CADD;AAEPC,YAAAA,QAAQ,EAAE,EAFH;AAGPC,YAAAA,KAAK,EAAE;AAHA,WAHR;AAQHC,UAAAA,QAAQ,EAAE;AACNC,YAAAA,SAAS,EAAE;AACPC,cAAAA,KAAK,EAAE;AADA;AADL,WARP;AAaHC,UAAAA,QAAQ,EAAE;AACNC,YAAAA,IAAI,EAAE;AADA;AAbP,SAPJ;AAwBHC,QAAAA,KAAK,EAAE;AACHX,UAAAA,IAAI,EAAE,OADH;AAEHY,UAAAA,IAAI,EAAE,IAFH;AAGHC,UAAAA,GAAG,EAAE,IAHF;AAIHC,UAAAA,GAAG,EAAE,CAJF;AAKHC,UAAAA,WAAW,EAAE,KALV;AAMHT,UAAAA,QAAQ,EAAE;AACNC,YAAAA,SAAS,EAAE;AACPC,cAAAA,KAAK,EAAE;AADA;AADL,WANP;AAWHQ,UAAAA,SAAS,EAAE;AACPN,YAAAA,IAAI,EAAE;AADC,WAXR;AAcHD,UAAAA,QAAQ,EAAE;AACNC,YAAAA,IAAI,EAAE;AADA;AAdP,SAxBJ;AA0CHO,QAAAA,MAAM,EAAE,CAAC;AACLhB,UAAAA,IAAI,EAAER,MAAM,CAACQ,IADR;AAELD,UAAAA,IAAI,EAAE,KAFD;AAGLkB,UAAAA,KAAK,EAAE;AACHR,YAAAA,IAAI,EAAE,MADH;AAEHS,YAAAA,QAAQ,EAAE,KAFP;AAGHX,YAAAA,KAAK,EAAE;AAHJ,WAHF;AAQLY,UAAAA,WAAW,EAAE,EARR;AASLC,UAAAA,SAAS,EAAE;AACPb,YAAAA,KAAK,EAAE,IAAInB,OAAO,CAACiC,OAAR,CAAgBC,cAApB,CACH,CADG,EACA,CADA,EACG,CADH,EACM,CADN,EAEH,CACI;AAAEC,cAAAA,MAAM,EAAE,CAAV;AAAahB,cAAAA,KAAK,EAAE;AAApB,aADJ,EAEI;AAAEgB,cAAAA,MAAM,EAAE,CAAV;AAAahB,cAAAA,KAAK,EAAE;AAApB,aAFJ,CAFG;AADA;AATN,SAAD;AA1CL,OAAP;AA8DH,KApEkB;;AAEf,UAAKiB,KAAL,GAAa,EAAb;AAFe;AAGlB;;;;6BAmEQ;AACL,aACI,oBAAC,YAAD;AACI,QAAA,MAAM,EAAE,KAAKjC,SAAL,CAAe;AAAES,UAAAA,IAAI,EAAE,CAAC,GAAD,EAAM,GAAN;AAAR,SAAf,CADZ;AAEI,QAAA,KAAK,EAAE;AAAEN,UAAAA,MAAM,EAAE,KAAV;AAAiBD,UAAAA,KAAK,EAAE,MAAxB;AAAgCgC,UAAAA,SAAS,EAAE,KAA3C;AAAkDC,UAAAA,UAAU,EAAE;AAA9D,SAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;AAOH;;;;EA/EsCxC,KAAK,CAACyC,S;;AAiFjD,eAAetC,4BAAf","sourcesContent":["import React from \"react\";\r\nimport ReactEcharts from \"echarts-for-react\";\r\nimport echarts from 'echarts';\r\n\r\nclass MalfunctionQuantityEscalator extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n\r\n    getOption = (params) => {\r\n        return {\r\n            width: \"60%\",\r\n            height: \"50%\",\r\n            grid: {\r\n                top: \"22%\",\r\n                left: \"23%\"\r\n            },\r\n            xAxis: {\r\n                type: 'category',\r\n                data: ['直梯', '扶梯'],\r\n                axisLabel: {\r\n                    margin: 8,\r\n                    fontSize: 10,\r\n                    align: \"center\"\r\n                },\r\n                axisLine: {\r\n                    lineStyle: {\r\n                        color: \"rgba(0,83,229,1)\"\r\n                    }\r\n                },\r\n                axisTick: {\r\n                    show: false\r\n                }\r\n            },\r\n            yAxis: {\r\n                type: 'value',\r\n                name: \"数量\",\r\n                max: 1000,\r\n                min: 0,\r\n                boundaryGap: false,\r\n                axisLine: {\r\n                    lineStyle: {\r\n                        color: \"rgba(0,83,229,1)\"\r\n                    }\r\n                },\r\n                splitLine: {\r\n                    show: false\r\n                },\r\n                axisTick: {\r\n                    show: false\r\n                }\r\n            },\r\n            series: [{\r\n                data: params.data,\r\n                type: 'bar',\r\n                label: {\r\n                    show: \"true\",\r\n                    position: \"top\",\r\n                    color: \"rgb(28, 244, 249)\"\r\n                },\r\n                barMaxWidth: 15,\r\n                itemStyle: {\r\n                    color: new echarts.graphic.LinearGradient(\r\n                        0, 0, 0, 1,\r\n                        [\r\n                            { offset: 0, color: 'rgb(28,244,249)' },\r\n                            { offset: 1, color: 'rgb(0,83,229)' }\r\n                        ]\r\n                    )\r\n                }\r\n            }]\r\n        };\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <ReactEcharts\r\n                option={this.getOption({ data: [700, 800] })}\r\n                style={{ height: \"85%\", width: \"100%\", marginTop: \"10%\", marginLeft: \"10%\" }}\r\n            >\r\n            </ReactEcharts>\r\n        )\r\n    }\r\n}\r\nexport default MalfunctionQuantityEscalator;"]},"metadata":{},"sourceType":"module"}