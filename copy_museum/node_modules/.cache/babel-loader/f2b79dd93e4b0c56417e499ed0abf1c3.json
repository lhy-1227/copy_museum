{"ast":null,"code":"import _classCallCheck from \"E:\\\\web\\\\copy_museum\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"E:\\\\web\\\\copy_museum\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"E:\\\\web\\\\copy_museum\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"E:\\\\web\\\\copy_museum\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"E:\\\\web\\\\copy_museum\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"E:\\\\web\\\\copy_museum\\\\src\\\\Components\\\\Home\\\\ChartLeft\\\\Top2.js\";\nimport React from \"react\";\nimport ReactEcharts from 'echarts-for-react';\nimport \"./Left.css\";\n\nvar Top2 =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Top2, _React$Component);\n\n  function Top2(props) {\n    var _this;\n\n    _classCallCheck(this, Top2);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Top2).call(this, props));\n\n    _this.getOption2 = function () {\n      var op = {\n        title: {\n          text: '商户积分统计',\n          sublink: 'http://e.weibo.com/1341556070/AizJXrAEa'\n        },\n        tooltip: {\n          trigger: 'axis',\n          axisPointer: {\n            // 坐标轴指示器，坐标轴触发有效\n            type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'\n\n          },\n          formatter: function formatter(params) {\n            return params[0].name + '<br/>' + params[0].seriesName + ' : ' + params[0].value + '<br/>' + params[1].seriesName + ' : ' + (params[1].value + params[0].value);\n          }\n        },\n        legend: {\n          selectedMode: false,\n          data: ['已使用的积分', '剩余的积分']\n        },\n        toolbox: {\n          show: true,\n          feature: {\n            mark: {\n              show: true\n            },\n            dataView: {\n              show: true,\n              readOnly: false\n            },\n            restore: {\n              show: true\n            },\n            saveAsImage: {\n              show: true\n            }\n          }\n        },\n        grid: {\n          left: '3%',\n          right: '4%',\n          bottom: '3%',\n          containLabel: true\n        },\n        xAxis: [{\n          type: 'category',\n          data: []\n        }],\n        yAxis: [{\n          type: 'value',\n          boundaryGap: [0, 0.1]\n        }],\n        series: [{\n          name: '剩余的积分',\n          type: 'bar',\n          stack: 'sum',\n          barCategoryGap: '50%',\n          itemStyle: {\n            normal: {\n              color: 'tomato',\n              barBorderColor: 'tomato',\n              barBorderWidth: 2,\n              barBorderRadius: 0,\n              label: {\n                show: true,\n                position: 'insideTop'\n              }\n            }\n          },\n          data: [18]\n        }, {\n          name: '申请的积分',\n          type: 'bar',\n          stack: 'sum',\n          itemStyle: {\n            normal: {\n              color: '#fff',\n              barBorderColor: 'tomato',\n              barBorderWidth: 2,\n              barBorderRadius: 0,\n              label: {\n                show: true,\n                position: 'top',\n                textStyle: {\n                  color: 'tomato'\n                }\n              }\n            }\n          },\n          data: [20]\n        }]\n      };\n      return op;\n    };\n\n    _this.state = {};\n    return _this;\n  }\n\n  _createClass(Top2, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"a\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(ReactEcharts, {\n        option: this.getOption2(),\n        style: {\n          height: '200px',\n          width: '200px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Top2;\n}(React.Component);\n\nexport { Top2 as default };","map":{"version":3,"sources":["E:\\web\\copy_museum\\src\\Components\\Home\\ChartLeft\\Top2.js"],"names":["React","ReactEcharts","Top2","props","getOption2","op","title","text","sublink","tooltip","trigger","axisPointer","type","formatter","params","name","seriesName","value","legend","selectedMode","data","toolbox","show","feature","mark","dataView","readOnly","restore","saveAsImage","grid","left","right","bottom","containLabel","xAxis","yAxis","boundaryGap","series","stack","barCategoryGap","itemStyle","normal","color","barBorderColor","barBorderWidth","barBorderRadius","label","position","textStyle","state","height","width","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport ReactEcharts from 'echarts-for-react';\r\nimport \"./Left.css\";\r\n\r\nexport default class Top2 extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {   \r\n        };\r\n    }\r\n\t\r\n   getOption2 = () => {\r\n\t\tlet op = {\r\n\t\t\ttitle:{\r\n                text:'商户积分统计',\r\n                sublink: 'http://e.weibo.com/1341556070/AizJXrAEa'\r\n            },\r\n            tooltip : {\r\n                trigger: 'axis',\r\n                axisPointer : {            // 坐标轴指示器，坐标轴触发有效\r\n                    type : 'shadow'        // 默认为直线，可选为：'line' | 'shadow'\r\n                },\r\n                formatter: function (params){\r\n                    return params[0].name + '<br/>'\r\n                           + params[0].seriesName + ' : ' + params[0].value + '<br/>'\r\n                           + params[1].seriesName + ' : ' + (params[1].value + params[0].value);\r\n                }\r\n            },\r\n            legend:{\r\n                selectedMode:false,\r\n                data:['已使用的积分','剩余的积分']\r\n            },\r\n            toolbox: {\r\n                show : true,\r\n                feature : {\r\n                    mark : {show: true},\r\n                    dataView : {show: true, readOnly: false},\r\n                    restore : {show: true},\r\n                    saveAsImage : {show: true}\r\n                }\r\n            },\r\n           grid: {  \r\n                left: '3%',  \r\n                right: '4%',  \r\n                bottom: '3%',  \r\n                containLabel: true  \r\n            },\r\n            xAxis: [{\r\n                type : 'category',\r\n                data:[]\r\n            }],\r\n            yAxis : [\r\n                     {\r\n                         type : 'value',\r\n                         boundaryGap: [0, 0.1]\r\n                     }\r\n             ],\r\n            series : [{\r\n                name : '剩余的积分',\r\n                type : 'bar',\r\n                stack: 'sum',\r\n                barCategoryGap: '50%',\r\n                itemStyle: {\r\n                        normal: {\r\n                            color: 'tomato',\r\n                            barBorderColor: 'tomato',\r\n                            barBorderWidth: 2,\r\n                            barBorderRadius:0,\r\n                            label : {\r\n                                show: true, position: 'insideTop'\r\n                            }\r\n                        }\r\n                    },\r\n                 data : [18]\r\n            },\r\n            {\r\n                name:'申请的积分',\r\n                type:'bar',\r\n                stack:'sum',\r\n                itemStyle:{\r\n                    normal:{\r\n                         color: '#fff',\r\n                         barBorderColor: 'tomato',\r\n                         barBorderWidth: 2,\r\n                         barBorderRadius:0,\r\n                         label : {\r\n                             show: true, \r\n                             position: 'top',\r\n                            \r\n                             textStyle: {\r\n                                 color: 'tomato'\r\n                             }\r\n                         }\r\n                    }\r\n                },\r\n                data:[20]\r\n            }]\r\n\t\t}\r\n\t\treturn op\r\n\t}\r\n    render() {\r\n        return (\r\n            <div className=\"a\">\r\n\t\t\t\t<ReactEcharts option={this.getOption2()} style={{height:'200px',width:'200px'}}></ReactEcharts>\r\n\t\t\t</div>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}