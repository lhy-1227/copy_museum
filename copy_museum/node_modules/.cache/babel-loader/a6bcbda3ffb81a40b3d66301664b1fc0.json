{"ast":null,"code":"import _classCallCheck from \"E:\\\\web\\\\copy_museum\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"E:\\\\web\\\\copy_museum\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"E:\\\\web\\\\copy_museum\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"E:\\\\web\\\\copy_museum\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"E:\\\\web\\\\copy_museum\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"E:\\\\web\\\\copy_museum\\\\src\\\\Components\\\\Home\\\\ChartLeft\\\\Top2.js\";\nimport React from \"react\";\nimport ReactEcharts from 'echarts-for-react';\nimport \"./Left.css\";\n\nvar Top2 =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Top2, _React$Component);\n\n  function Top2(props) {\n    var _this;\n\n    _classCallCheck(this, Top2);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Top2).call(this, props));\n\n    _this.getOption = function () {\n      var op = {\n        width: \"80%\",\n        height: \"85%\",\n        tooltip: {\n          trigger: 'axis',\n          axisPointer: {\n            // 坐标轴指示器，坐标轴触发有效\n            type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'\n\n          }\n        },\n        grid: {\n          left: '50px',\n          right: '70px'\n        },\n        xAxis: {\n          type: 'value',\n          name: '人数',\n          show: false\n        },\n        yAxis: [{\n          type: 'category',\n          data: ['温度', '湿度', 'TVOC', '甲醛', 'PM2.5', '氨气'],\n          extraCssText: 'box-shadow: 0 0 3px write;',\n          axisLabel: {\n            textStyle: {\n              color: '#0066FF' //坐标的字体颜色\n\n            },\n            interval: 0\n          },\n          axisLine: {\n            show: false\n          },\n          axisTick: {\n            show: false //隐藏坐标轴的刻度\n\n          }\n        }, {\n          type: 'category',\n          data: ['18°', '90%', '0.3mg/m³', '0.5mg/m³', '66ug/m³.5', '12%'],\n          extraCssText: 'box-shadow: 0 0 3px write;',\n          axisLabel: {\n            textStyle: {\n              color: '#00FFFF' //坐标的字体颜色\n\n            },\n            interval: 0\n          },\n          axisLine: {\n            show: false\n          },\n          axisTick: {\n            show: false //隐藏坐标轴的刻度\n\n          }\n        }],\n        series: [{\n          name: '直接访问',\n          type: 'bar',\n          stack: '总量',\n          barWidth: '100%',\n          itemStyle: {\n            normal: {\n              barBorderRadius: 5,\n              color: '#00CCFF'\n            }\n          },\n          data: [120, 200, 150, 80, 100, 60]\n        }, {\n          type: 'bar',\n          stack: '总量',\n          barWidth: '100%',\n          itemStyle: {\n            normal: {\n              color: 'rgba(255,255,255,0.4)'\n            }\n          },\n          data: [180, 100, 150, 220, 200, 240]\n        }]\n      };\n      return op;\n    };\n\n    _this.state = {};\n    return _this;\n  }\n\n  _createClass(Top2, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(ReactEcharts, {\n        option: this.getOption(),\n        style: {\n          height: '50%',\n          width: '100%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return Top2;\n}(React.Component);\n\nexport { Top2 as default };","map":{"version":3,"sources":["E:\\web\\copy_museum\\src\\Components\\Home\\ChartLeft\\Top2.js"],"names":["React","ReactEcharts","Top2","props","getOption","op","width","height","tooltip","trigger","axisPointer","type","grid","left","right","xAxis","name","show","yAxis","data","extraCssText","axisLabel","textStyle","color","interval","axisLine","axisTick","series","stack","barWidth","itemStyle","normal","barBorderRadius","state","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport ReactEcharts from 'echarts-for-react';\r\nimport \"./Left.css\";\r\n\r\nexport default class Top2 extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {   \r\n        };\r\n    }\r\n   getOption = () => {\r\n\t\tlet op = {\r\n\t\t\twidth: \"80%\",\r\n            height: \"85%\",\r\n\t\t\ttooltip : {\r\n\t\t\ttrigger: 'axis',\r\n\t\t\taxisPointer : {            // 坐标轴指示器，坐标轴触发有效\r\n\t\t\t\ttype : 'shadow'        // 默认为直线，可选为：'line' | 'shadow'\r\n\t\t\t}\r\n\t\t},\r\n\t\tgrid: {\r\n\t\t\tleft: '50px',\r\n\t\t\tright: '70px'\r\n\t\t},\r\n\t\txAxis:  {\r\n\t\t\ttype: 'value',\r\n\t\t\tname: '人数',\r\n\t\t\tshow: false,\r\n\t\t},\r\n\t\tyAxis: [{\r\n\t\t\ttype: 'category',\r\n\t\t\tdata: ['温度', '湿度', 'TVOC', '甲醛', 'PM2.5', '氨气'],\r\n\t\t\textraCssText: 'box-shadow: 0 0 3px write;',\r\n\t\t\taxisLabel: {  \r\n\t\t\t\ttextStyle:{\r\n\t\t\t\t\tcolor:'#0066FF',  //坐标的字体颜色\r\n\t\t\t\t},\r\n\t\t\t\tinterval:0\r\n\t\t\t},\r\n\t\t\taxisLine: {\r\n\t\t\t\tshow: false\r\n\t\t\t},\r\n\t\t\taxisTick:{\r\n\t\t\t\tshow:false, //隐藏坐标轴的刻度\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\ttype: 'category',\r\n\t\t\tdata: ['18°', '90%', '0.3mg/m³', '0.5mg/m³', '66ug/m³.5', '12%'],\r\n\t\t\textraCssText: 'box-shadow: 0 0 3px write;',\r\n\t\t\taxisLabel: {  \r\n\t\t\t\ttextStyle:{\r\n\t\t\t\t\tcolor:'#00FFFF',  //坐标的字体颜色\r\n\t\t\t\t},\r\n\t\t\t\tinterval:0\r\n\t\t\t},\r\n\t\t\taxisLine: {\r\n\t\t\t\tshow: false\r\n\t\t\t},\r\n\t\t\taxisTick:{\r\n\t\t\t\tshow:false, //隐藏坐标轴的刻度\r\n\t\t\t}\r\n\t\t}\r\n\t\t],\r\n\t\tseries: [\r\n\t\t\t{\r\n\t\t\t\tname: '直接访问',\r\n\t\t\t\ttype: 'bar',\r\n\t\t\t\tstack: '总量',\r\n\t\t\t\tbarWidth: '100%',\r\n\t\t\t\titemStyle: {\r\n\t\t\t\t\tnormal: {\r\n\t\t\t\t\t\tbarBorderRadius: 5,\r\n\t\t\t\t\t\tcolor: '#00CCFF'\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\tdata: [120, 200, 150, 80 , 100, 60]\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttype: 'bar',\r\n\t\t\t\tstack: '总量',\r\n\t\t\t\tbarWidth: '100%',\r\n\t\t\t\titemStyle: {\r\n\t\t\t\t\tnormal: {\r\n\t\t\t\t\t\tcolor: 'rgba(255,255,255,0.4)'\r\n\t\t\t\t\t}\t\t\t\r\n\t\t\t\t},\r\n\t\t\t\tdata: [180, 100, 150, 220, 200, 240]\r\n\t\t\t}]\r\n\t\t}\r\n\t\treturn op\r\n\t}\r\n    render() {\r\n        return (\r\n\t\t\t<ReactEcharts option={this.getOption()} style={{height:'50%',width:'100%'}}></ReactEcharts>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}