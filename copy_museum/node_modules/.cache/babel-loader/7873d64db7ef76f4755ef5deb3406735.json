{"ast":null,"code":"import _classCallCheck from \"E:\\\\web\\\\copy_museum\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"E:\\\\web\\\\copy_museum\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"E:\\\\web\\\\copy_museum\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"E:\\\\web\\\\copy_museum\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"E:\\\\web\\\\copy_museum\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"E:\\\\web\\\\copy_museum\\\\src\\\\Components\\\\Tourist\\\\ChartLeft\\\\TotalNumbers.js\";\nimport React from \"react\";\nimport ReactEcharts from 'echarts-for-react';\n\nvar TotalNumbers =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(TotalNumbers, _React$Component);\n\n  function TotalNumbers(props) {\n    var _this;\n\n    _classCallCheck(this, TotalNumbers);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(TotalNumbers).call(this, props));\n\n    _this.getOption = function (params) {\n      var getSeries = function getSeries() {\n        var radius = 30;\n        var arr = [];\n        var colorList = ['#0033CC', '#0066CC', '#0099CC', '#00CCCC', '#00FFCC'];\n\n        for (var i = 0; i < params.data.length; i++) {\n          arr.push({\n            name: params.name[i],\n            type: 'pie',\n            radius: [radius + '%', radius + 20 + '%'],\n            clockwise: 'true',\n            data: [{\n              value: params.data[i],\n              name: params.name[i],\n              label: {\n                normal: {\n                  textStyle: {\n                    color: colorList[i]\n                  }\n                }\n              },\n              labelLine: {\n                normal: {\n                  lineStyle: {\n                    color: colorList[i]\n                  },\n                  smooth: 0.2,\n                  length: 10,\n                  length2: 20\n                }\n              },\n              itemStyle: {\n                normal: {\n                  //自定义颜色\n                  color: colorList[i]\n                }\n              }\n            }, {\n              value: 100 - params.data[i],\n              name: 'a',\n              itemStyle: {\n                normal: {\n                  color: 'rgba(0,0,0,0)'\n                }\n              }\n            }]\n          });\n          radius += 10;\n        }\n\n        return arr;\n      };\n\n      return {\n        color: ['#0033CC', '#0066CC', '#0099CC', '#00CCCC', '#00FFCC'],\n        tooltip: {\n          trigger: 'item',\n          formatter: \"{a} : {c}\"\n        },\n        avoidLabelOverlap: false,\n        legendHoverLink: false,\n        series: getSeries()\n      };\n    };\n\n    _this.state = {};\n    return _this;\n  }\n\n  _createClass(TotalNumbers, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(ReactEcharts, {\n        option: this.getOption({\n          data: [90, 65, 50, 25, 10],\n          which: \"down\",\n          name: [\"数量全部\", \"年统计\", \"月统计\", \"7日统计\", \"今日统计\"]\n        }),\n        style: {\n          height: '100%',\n          width: '100%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return TotalNumbers;\n}(React.Component);\n\nexport { TotalNumbers as default };","map":{"version":3,"sources":["E:\\web\\copy_museum\\src\\Components\\Tourist\\ChartLeft\\TotalNumbers.js"],"names":["React","ReactEcharts","TotalNumbers","props","getOption","params","getSeries","radius","arr","colorList","i","data","length","push","name","type","clockwise","value","label","normal","textStyle","color","labelLine","lineStyle","smooth","length2","itemStyle","tooltip","trigger","formatter","avoidLabelOverlap","legendHoverLink","series","state","which","height","width","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,mBAAzB;;IAEqBC,Y;;;;;AACjB,wBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,sFAAMA,KAAN;;AADe,UAMpBC,SANoB,GAMR,UAACC,MAAD,EAAY;AACzB,UAAIC,SAAS,GAAG,SAAZA,SAAY,GAAM;AAClB,YAAIC,MAAM,GAAG,EAAb;AACH,YAAIC,GAAG,GAAG,EAAV;AACA,YAAIC,SAAS,GAAG,CAAC,SAAD,EAAY,SAAZ,EAAuB,SAAvB,EAAkC,SAAlC,EAA6C,SAA7C,CAAhB;;AACA,aAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGL,MAAM,CAACM,IAAP,CAAYC,MAA/B,EAAuCF,CAAC,EAAxC,EAA2C;AAC1CF,UAAAA,GAAG,CAACK,IAAJ,CACC;AACCC,YAAAA,IAAI,EAAET,MAAM,CAACS,IAAP,CAAYJ,CAAZ,CADP;AAECK,YAAAA,IAAI,EAAC,KAFN;AAGCR,YAAAA,MAAM,EAAE,CAACA,MAAM,GAAG,GAAV,EAAeA,MAAM,GAAC,EAAP,GAAU,GAAzB,CAHT;AAICS,YAAAA,SAAS,EAAC,MAJX;AAKCL,YAAAA,IAAI,EAAC,CACJ;AACCM,cAAAA,KAAK,EAACZ,MAAM,CAACM,IAAP,CAAYD,CAAZ,CADP;AAECI,cAAAA,IAAI,EAACT,MAAM,CAACS,IAAP,CAAYJ,CAAZ,CAFN;AAGEQ,cAAAA,KAAK,EAAE;AACPC,gBAAAA,MAAM,EAAE;AACPC,kBAAAA,SAAS,EAAE;AACVC,oBAAAA,KAAK,EAAEZ,SAAS,CAACC,CAAD;AADN;AADJ;AADD,eAHT;AAUCY,cAAAA,SAAS,EAAE;AACVH,gBAAAA,MAAM,EAAE;AACPI,kBAAAA,SAAS,EAAE;AACVF,oBAAAA,KAAK,EAAEZ,SAAS,CAACC,CAAD;AADN,mBADJ;AAIPc,kBAAAA,MAAM,EAAE,GAJD;AAKPZ,kBAAAA,MAAM,EAAE,EALD;AAMPa,kBAAAA,OAAO,EAAE;AANF;AADE,eAVZ;AAoBCC,cAAAA,SAAS,EAAE;AACVP,gBAAAA,MAAM,EAAC;AACN;AACAE,kBAAAA,KAAK,EAAEZ,SAAS,CAACC,CAAD;AAFV;AADG;AApBZ,aADI,EA4BJ;AACCO,cAAAA,KAAK,EAAE,MAAIZ,MAAM,CAACM,IAAP,CAAYD,CAAZ,CADZ;AAECI,cAAAA,IAAI,EAAE,GAFP;AAGCY,cAAAA,SAAS,EAAE;AACVP,gBAAAA,MAAM,EAAC;AACNE,kBAAAA,KAAK,EAAE;AADD;AADG;AAHZ,aA5BI;AALN,WADD;AA8CAd,UAAAA,MAAM,IAAI,EAAV;AACA;;AACD,eAAOC,GAAP;AACA,OAtDD;;AAuDM,aAAO;AACZa,QAAAA,KAAK,EAAE,CAAC,SAAD,EAAY,SAAZ,EAAuB,SAAvB,EAAkC,SAAlC,EAA6C,SAA7C,CADK;AAEZM,QAAAA,OAAO,EAAG;AACTC,UAAAA,OAAO,EAAE,MADA;AAETC,UAAAA,SAAS,EAAE;AAFF,SAFE;AAOZC,QAAAA,iBAAiB,EAAC,KAPN;AAQZC,QAAAA,eAAe,EAAE,KARL;AASZC,QAAAA,MAAM,EAAE1B,SAAS;AATL,OAAP;AAWN,KAzEqB;;AAEf,UAAK2B,KAAL,GAAa,EAAb;AAFe;AAIlB;;;;6BAsEQ;AACL,aACL,oBAAC,YAAD;AAAc,QAAA,MAAM,EAAE,KAAK7B,SAAL,CAAe;AAAEO,UAAAA,IAAI,EAAE,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,EAAiB,EAAjB,CAAR;AAA8BuB,UAAAA,KAAK,EAAE,MAArC;AAA6CpB,UAAAA,IAAI,EAAE,CAAC,MAAD,EAAS,KAAT,EAAgB,KAAhB,EAAuB,MAAvB,EAA+B,MAA/B;AAAnD,SAAf,CAAtB;AAAmI,QAAA,KAAK,EAAE;AAACqB,UAAAA,MAAM,EAAC,MAAR;AAAeC,UAAAA,KAAK,EAAC;AAArB,SAA1I;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADK;AAGH;;;;EA/EqCpC,KAAK,CAACqC,S;;SAA3BnC,Y","sourcesContent":["import React from \"react\";\r\nimport ReactEcharts from 'echarts-for-react';\r\n\r\nexport default class TotalNumbers extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {   \r\n        };\r\n    }\r\n\t\r\n   getOption = (params) => {\r\n\t\tlet getSeries = () => {\r\n\t\t    let radius = 30;\r\n\t\t\tlet arr = [];\r\n\t\t\tlet colorList = ['#0033CC', '#0066CC', '#0099CC', '#00CCCC', '#00FFCC'];\r\n\t\t\tfor(let i = 0; i < params.data.length; i++){\r\n\t\t\t\tarr.push(\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: params.name[i],\r\n\t\t\t\t\t\ttype:'pie',\r\n\t\t\t\t\t\tradius: [radius + '%', radius+20+'%'],\r\n\t\t\t\t\t\tclockwise:'true',\r\n\t\t\t\t\t\tdata:[\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tvalue:params.data[i], \r\n\t\t\t\t\t\t\t\tname:params.name[i],\r\n\t\t\t\t\t\t\t\t label: {\r\n\t\t\t\t\t\t\t\t\tnormal: {\r\n\t\t\t\t\t\t\t\t\t\ttextStyle: {\r\n\t\t\t\t\t\t\t\t\t\t\tcolor: colorList[i]\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\tlabelLine: {\r\n\t\t\t\t\t\t\t\t\tnormal: {\r\n\t\t\t\t\t\t\t\t\t\tlineStyle: {\r\n\t\t\t\t\t\t\t\t\t\t\tcolor: colorList[i]\r\n\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\tsmooth: 0.2,\r\n\t\t\t\t\t\t\t\t\t\tlength: 10,\r\n\t\t\t\t\t\t\t\t\t\tlength2: 20\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\titemStyle: {\r\n\t\t\t\t\t\t\t\t\tnormal:{\r\n\t\t\t\t\t\t\t\t\t\t//自定义颜色\r\n\t\t\t\t\t\t\t\t\t\tcolor: colorList[i]\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tvalue: 100-params.data[i], \r\n\t\t\t\t\t\t\t\tname: 'a',\r\n\t\t\t\t\t\t\t\titemStyle: {\r\n\t\t\t\t\t\t\t\t\tnormal:{\r\n\t\t\t\t\t\t\t\t\t\tcolor: 'rgba(0,0,0,0)'\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t]\r\n\t\t\t\t\t}\r\n\t\t\t\t)\r\n\t\t\t\tradius += 10;\r\n\t\t\t}\r\n\t\t\treturn arr;\r\n\t\t} \r\n        return {\r\n\t\t\tcolor: ['#0033CC', '#0066CC', '#0099CC', '#00CCCC', '#00FFCC'],\r\n\t\t\ttooltip : {\r\n\t\t\t\ttrigger: 'item',\r\n\t\t\t\tformatter: \"{a} : {c}\"\r\n\t\t\t},\r\n\t\t\t\r\n\t\t\tavoidLabelOverlap:false,\r\n\t\t\tlegendHoverLink :false,\r\n\t\t\tseries: getSeries()\r\n\t\t}\r\n\t}\r\n    render() {\r\n        return (\r\n\t\t\t<ReactEcharts option={this.getOption({ data: [90, 65, 50, 25, 10], which: \"down\", name: [\"数量全部\", \"年统计\", \"月统计\", \"7日统计\", \"今日统计\"] })} style={{height:'100%',width:'100%'}}></ReactEcharts>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}