{"ast":null,"code":"import \"antd/es/progress/style/css\";\nimport _Progress from \"antd/es/progress\";\nimport _classCallCheck from \"E:\\\\web\\\\copy_museum\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"E:\\\\web\\\\copy_museum\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"E:\\\\web\\\\copy_museum\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"E:\\\\web\\\\copy_museum\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"E:\\\\web\\\\copy_museum\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"E:\\\\web\\\\copy_museum\\\\src\\\\Components\\\\Home\\\\ChartLeft\\\\Top4.js\";\nimport React from \"react\";\nimport ReactEcharts from 'echarts-for-react';\nimport \"./Left.css\";\nimport style from \"./EfficiencyManagement.module.css\";\nimport echarts from \"echarts\";\n\nvar Top4 =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Top4, _React$Component);\n\n  /* constructor(props) {\r\n       super(props);\r\n       this.state = {   \r\n       };\r\n   }\r\n  \tgetOption4 = () => {\r\n  let op = {\r\n  // 图表的位置\r\n  grid: {\r\n  \tposition: 'center',\r\n   },\r\n  radar: {\r\n  \tshape: 'polygon',\r\n  \tsplitNumber: 5, // 雷达图圈数设置\r\n  \tname: {\r\n  \t\ttextStyle: {\r\n  \t\t\tcolor: '#0066FF',\r\n  \t\t},\r\n  \t},\r\n  \t// 设置雷达图中间射线的颜色\r\n  \taxisLine: {\r\n  \t\tlineStyle: {\r\n  \t\t\tcolor: '#0066FF',\r\n  \t\t\t},\r\n  \t},\r\n  \tindicator: [\r\n  \t   { name: '美食', max: 6500},\r\n  \t   { name: '酒店', max: 16000},\r\n  \t   { name: '服务', max: 30000},\r\n  \t   { name: '体验', max: 38000},\r\n  \t   { name: '风景', max: 52000},\r\n  \t   { name: '交通', max: 25000},\r\n  \t   { name: '其他', max: 16000},\r\n  \t   { name: '服务', max: 30000},\r\n  \t   { name: '体验', max: 38000},\r\n  \t   { name: '风景', max: 52000},\r\n  \t   { name: '交通', max: 25000}\r\n  \t   \r\n  \t],\r\n  \t//雷达图背景的颜色，在这儿随便设置了一个颜色，完全不透明度为0，就实现了透明背景\r\n  \tsplitArea : {\r\n  \t\tshow : false,\r\n  \t\tareaStyle : {\r\n  \t\t\tcolor: '#0066FF', // 图表背景的颜色\r\n  \t\t},\r\n  \t},\r\n  \tsplitLine : {\r\n  \t\tshow : true,\r\n  \t\tlineStyle : {\r\n  \t\t\twidth : 1,\r\n  \t\t\tcolor : '#0066FF', // 设置网格的颜色\r\n  \t\t},\r\n  \t},\r\n  },\r\n  series: [{\r\n  \tname: '雷达图', // tooltip中的标题\r\n  \ttype: 'radar', //表示是雷达图\r\n  \tsymbol: 'circle', // 拐点的样式，还可以取值'rect','angle'等\r\n  \tsymbolSize: 8, // 拐点的大小\r\n  \t\t\tareaStyle: {\r\n  \t\tnormal: {\r\n  \t\t\twidth: 1,\r\n  \t\t\topacity: 0.2,\r\n  \t\t},\r\n  \t},\r\n  \tdata: [\r\n  \t\t{\r\n  \t\t\tvalue: [17, 24, 27, 29, 26, 16, 13, 17, 25],\r\n  \t\t\tname: '2018-07',\r\n  \t\t\t// 设置区域边框和区域的颜色\r\n  \t\t\titemStyle: {\r\n  \t\t\t\tnormal: {\r\n  \t\t\t\t\tcolor: 'rgba(255,225,0,.3)',\r\n  \t\t\t\t\tlineStyle: {\r\n  \t\t\t\t\t\tcolor: 'rgba(255,225,0,.3)',\r\n  \t\t\t\t\t},\r\n  \t\t\t\t},\r\n  \t\t\t},\r\n  \t\t\t//在拐点处显示数值\r\n  \t\t\tlabel: {\r\n  \t\t\t\tnormal: {\r\n  \t\t\t\t\tshow: true,\r\n  \t\t\t\t\tformatter: (params: any) => {\r\n  \t\t\t\t\t\treturn params.value\r\n  \t\t\t\t\t},\r\n  \t\t\t\t},\r\n  \t\t\t},\r\n  \t\t},\r\n  \t\t{\r\n  \t\t\tvalue: [5, 20, 19, 11, 22, 17, 8, 19, 16],\r\n  \t\t\tname: '',\r\n  \t\t\t itemStyle: {\r\n  \t\t\t\tnormal: {\r\n  \t\t\t\t\tcolor: 'rgba(60,135,213,.3)',\r\n  \t\t\t\t\tlineStyle: {\r\n  \t\t\t\t\t\twidth: 1,\r\n  \t\t\t\t\t\tcolor: 'rgba(60,135,213,.3)',\r\n  \t\t\t\t\t},\r\n  \t\t\t\t},\r\n  \t\t\t},\r\n  \t\t},\r\n  \t\t {\r\n  \t\t\tvalue: [7, 18, 19, 13, 22, 17, 8, 25, 9],\r\n  \t\t\tname: '',\r\n  \t\t\titemStyle: {\r\n  \t\t\t\tnormal: {\r\n  \t\t\t\t\tcolor: 'rgba(255,74,74,.3)',\r\n  \t\t\t\t\tlineStyle: {\r\n  \t\t\t\t\t\twidth: 1,\r\n  \t\t\t\t\t\tcolor: 'rgba(255,74,74,.3)',\r\n  \t\t\t\t\t},\r\n  \t\t\t\t},\r\n  \t\t\t},\r\n  \t\t},\r\n  \t],\r\n  }]\r\n  \t}\r\n  return op;\r\n  }\r\n   render() {\r\n       return (\r\n           <div className=\"a\">\r\n  \t<ReactEcharts option={this.getOption4()} style={{height:'70%',width:'100%',paddingTop:'30px'}}></ReactEcharts>\r\n  </div>\r\n       )\r\n   }*/\n  function Top4(props) {\n    var _this;\n\n    _classCallCheck(this, Top4);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Top4).call(this, props));\n\n    _this.getOption = function () {\n      var getDatas = function getDatas() {\n        var res = [];\n        res.push({\n          type: 'pie',\n          selectedMode: false,\n          center: [\"50%\", \"60%\"],\n          radius: [0, '55%'],\n          hoverAnimation: false,\n          data: [{\n            value: 245,\n            itemStyle: {\n              color: new echarts.graphic.RadialGradient(0.5, 0.6, 0.5, [{\n                offset: 0,\n                color: 'rgba(0,0,0,0)'\n              }, {\n                offset: 1,\n                color: 'rgb(0,35,70)'\n              }])\n            }\n          }],\n          label: {\n            show: true,\n            position: \"center\",\n            formatter: function formatter() {\n              return \"能效比\\n\\n37%\";\n            },\n            color: \"rgb(28, 244, 249)\",\n            fontSize: 16,\n            fontWeight: \"bold\"\n          },\n          labelLine: {\n            show: false\n          }\n        }, {\n          type: 'pie',\n          center: [\"50%\", \"60%\"],\n          radius: ['65%', '80%'],\n          hoverAnimation: false,\n          data: [{\n            value: 335,\n            itemStyle: {\n              color: \"rgb(0,110,227)\"\n            }\n          }, {\n            value: 310,\n            itemStyle: {\n              color: \"rgba(233,233,233,0.1)\"\n            }\n          }],\n          label: {\n            show: false\n          },\n          labelLine: {\n            show: false\n          }\n        });\n        return res;\n      };\n\n      return {\n        series: getDatas()\n      };\n    };\n\n    _this.state = {};\n    return _this;\n  }\n\n  _createClass(Top4, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: style.efficiencyManagement,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: style.efficiencyManagementChart,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      }, React.createElement(ReactEcharts, {\n        option: this.getOption(),\n        style: {\n          width: \"100%\",\n          height: \"95%\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: style.efficiencyManagementChart,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: style.efficiencyManagementbar,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: style.efficiencyManagementTitle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224\n        },\n        __self: this\n      }, \"\\u603B\\u8D1F\\u8377\\uFF1A53667.4KW\"), React.createElement(_Progress, {\n        percent: 40,\n        status: \"active\",\n        showInfo: false,\n        style: {\n          width: \"80%\"\n        },\n        strokeColor: {\n          '0%': 'rgb(11,110,239)',\n          '100%': 'rgb(28,244,249)'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: style.efficiencyManagementbar,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: style.efficiencyManagementTitle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233\n        },\n        __self: this\n      }, \"\\u6E7F\\u5EA6\\uFF1A53667.4KW\"), React.createElement(_Progress, {\n        percent: 70,\n        status: \"active\",\n        showInfo: false,\n        style: {\n          width: \"80%\"\n        },\n        strokeColor: {\n          '0%': 'rgb(11,110,239)',\n          '100%': 'rgb(28,244,249)'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return Top4;\n}(React.Component);\n\nexport { Top4 as default };","map":{"version":3,"sources":["E:\\web\\copy_museum\\src\\Components\\Home\\ChartLeft\\Top4.js"],"names":["React","ReactEcharts","style","echarts","Top4","props","getOption","getDatas","res","push","type","selectedMode","center","radius","hoverAnimation","data","value","itemStyle","color","graphic","RadialGradient","offset","label","show","position","formatter","fontSize","fontWeight","labelLine","series","state","efficiencyManagement","efficiencyManagementChart","width","height","efficiencyManagementbar","efficiencyManagementTitle","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport ReactEcharts from 'echarts-for-react';\r\nimport \"./Left.css\";\r\nimport { Progress } from \"antd\";\r\nimport style from \"./EfficiencyManagement.module.css\";\r\nimport echarts from \"echarts\";\r\n\r\nexport default class Top4 extends React.Component {\r\n   /* constructor(props) {\r\n        super(props);\r\n        this.state = {   \r\n        };\r\n    }\r\n\t\r\n\tgetOption4 = () => {\r\n\t\tlet op = {\r\n\t\t\t// 图表的位置\r\n\t\t\tgrid: {\r\n\t\t\t\tposition: 'center',\r\n\t\t\t },\r\n\t\t\tradar: {\r\n\t\t\t\tshape: 'polygon',\r\n\t\t\t\tsplitNumber: 5, // 雷达图圈数设置\r\n\t\t\t\tname: {\r\n\t\t\t\t\ttextStyle: {\r\n\t\t\t\t\t\tcolor: '#0066FF',\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t\t// 设置雷达图中间射线的颜色\r\n\t\t\t\taxisLine: {\r\n\t\t\t\t\tlineStyle: {\r\n\t\t\t\t\t\tcolor: '#0066FF',\r\n\t\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t\tindicator: [\r\n\t\t\t\t   { name: '美食', max: 6500},\r\n\t\t\t\t   { name: '酒店', max: 16000},\r\n\t\t\t\t   { name: '服务', max: 30000},\r\n\t\t\t\t   { name: '体验', max: 38000},\r\n\t\t\t\t   { name: '风景', max: 52000},\r\n\t\t\t\t   { name: '交通', max: 25000},\r\n\t\t\t\t   { name: '其他', max: 16000},\r\n\t\t\t\t   { name: '服务', max: 30000},\r\n\t\t\t\t   { name: '体验', max: 38000},\r\n\t\t\t\t   { name: '风景', max: 52000},\r\n\t\t\t\t   { name: '交通', max: 25000}\r\n\t\t\t\t   \r\n\t\t\t\t],\r\n\t\t\t\t//雷达图背景的颜色，在这儿随便设置了一个颜色，完全不透明度为0，就实现了透明背景\r\n\t\t\t\tsplitArea : {\r\n\t\t\t\t\tshow : false,\r\n\t\t\t\t\tareaStyle : {\r\n\t\t\t\t\t\tcolor: '#0066FF', // 图表背景的颜色\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t\tsplitLine : {\r\n\t\t\t\t\tshow : true,\r\n\t\t\t\t\tlineStyle : {\r\n\t\t\t\t\t\twidth : 1,\r\n\t\t\t\t\t\tcolor : '#0066FF', // 设置网格的颜色\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t\tseries: [{\r\n\t\t\t\tname: '雷达图', // tooltip中的标题\r\n\t\t\t\ttype: 'radar', //表示是雷达图\r\n\t\t\t\tsymbol: 'circle', // 拐点的样式，还可以取值'rect','angle'等\r\n\t\t\t\tsymbolSize: 8, // 拐点的大小\r\n\r\n\t\t\t\tareaStyle: {\r\n\t\t\t\t\tnormal: {\r\n\t\t\t\t\t\twidth: 1,\r\n\t\t\t\t\t\topacity: 0.2,\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t\tdata: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tvalue: [17, 24, 27, 29, 26, 16, 13, 17, 25],\r\n\t\t\t\t\t\tname: '2018-07',\r\n\t\t\t\t\t\t// 设置区域边框和区域的颜色\r\n\t\t\t\t\t\titemStyle: {\r\n\t\t\t\t\t\t\tnormal: {\r\n\t\t\t\t\t\t\t\tcolor: 'rgba(255,225,0,.3)',\r\n\t\t\t\t\t\t\t\tlineStyle: {\r\n\t\t\t\t\t\t\t\t\tcolor: 'rgba(255,225,0,.3)',\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t//在拐点处显示数值\r\n\t\t\t\t\t\tlabel: {\r\n\t\t\t\t\t\t\tnormal: {\r\n\t\t\t\t\t\t\t\tshow: true,\r\n\t\t\t\t\t\t\t\tformatter: (params: any) => {\r\n\t\t\t\t\t\t\t\t\treturn params.value\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tvalue: [5, 20, 19, 11, 22, 17, 8, 19, 16],\r\n\t\t\t\t\t\tname: '',\r\n\t\t\t\t\t\t itemStyle: {\r\n\t\t\t\t\t\t\tnormal: {\r\n\t\t\t\t\t\t\t\tcolor: 'rgba(60,135,213,.3)',\r\n\t\t\t\t\t\t\t\tlineStyle: {\r\n\t\t\t\t\t\t\t\t\twidth: 1,\r\n\t\t\t\t\t\t\t\t\tcolor: 'rgba(60,135,213,.3)',\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t},\r\n\t\t\t\t\t {\r\n\t\t\t\t\t\tvalue: [7, 18, 19, 13, 22, 17, 8, 25, 9],\r\n\t\t\t\t\t\tname: '',\r\n\t\t\t\t\t\titemStyle: {\r\n\t\t\t\t\t\t\tnormal: {\r\n\t\t\t\t\t\t\t\tcolor: 'rgba(255,74,74,.3)',\r\n\t\t\t\t\t\t\t\tlineStyle: {\r\n\t\t\t\t\t\t\t\t\twidth: 1,\r\n\t\t\t\t\t\t\t\t\tcolor: 'rgba(255,74,74,.3)',\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t},\r\n\t\t\t\t],\r\n\t\t\t}]\r\n\r\n\t\t}\r\n\t\treturn op;\r\n\t}\r\n    render() {\r\n        return (\r\n            <div className=\"a\">\r\n\t\t\t\t<ReactEcharts option={this.getOption4()} style={{height:'70%',width:'100%',paddingTop:'30px'}}></ReactEcharts>\r\n\t\t\t</div>\r\n        )\r\n    }*/\r\n\t\r\n\t  constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n\r\n    getOption = () => {\r\n        let getDatas = () => {\r\n            let res = [];\r\n            res.push(\r\n                {\r\n                    type: 'pie',\r\n                    selectedMode: false,\r\n                    center: [\"50%\", \"60%\"],\r\n                    radius: [0, '55%'],\r\n                    hoverAnimation: false,\r\n                    data: [\r\n                        { value: 245,\r\n                            itemStyle: {\r\n                                color: new echarts.graphic.RadialGradient(\r\n                                    0.5, 0.6, 0.5,\r\n                                    [\r\n                                        { offset: 0, color: 'rgba(0,0,0,0)' },\r\n                                        { offset: 1, color: 'rgb(0,35,70)' }\r\n                                    ]\r\n                                )\r\n                            },\r\n                        }\r\n                    ],\r\n                    label: {\r\n                        show: true,\r\n                        position: \"center\",\r\n                        formatter: () => { return \"能效比\\n\\n37%\" },\r\n                        color: \"rgb(28, 244, 249)\",\r\n                        fontSize: 16,\r\n                        fontWeight: \"bold\",\r\n                    },\r\n                    labelLine: {\r\n                        show: false\r\n                    }\r\n                },\r\n                {\r\n                    type: 'pie',\r\n                    center: [\"50%\", \"60%\"],\r\n                    radius: ['65%', '80%'],\r\n                    hoverAnimation: false,\r\n                    data: [\r\n                        {\r\n                            value: 335,\r\n                            itemStyle: {\r\n                                color: \"rgb(0,110,227)\"\r\n                            }\r\n                        },\r\n                        {\r\n                            value: 310,\r\n                            itemStyle: {\r\n                                color: \"rgba(233,233,233,0.1)\"\r\n                            }\r\n                        }\r\n                    ],\r\n                    label: {\r\n                        show: false\r\n                    },\r\n                    labelLine: {\r\n                        show: false\r\n                    }\r\n                }\r\n            );\r\n            return res;\r\n        }\r\n        return {\r\n            series: getDatas()\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div className={style.efficiencyManagement}>\r\n                <div className={style.efficiencyManagementChart}>\r\n                    <ReactEcharts\r\n                        option={this.getOption()}\r\n                        style={{ width: \"100%\", height: \"95%\" }}\r\n                    >\r\n                    </ReactEcharts>\r\n                </div>\r\n                <div className={style.efficiencyManagementChart}>\r\n                    <div className={style.efficiencyManagementbar}>\r\n                        <div className={style.efficiencyManagementTitle}>总负荷：53667.4KW</div>\r\n                        <Progress percent={40} status=\"active\" showInfo={false}\r\n                            style={{ width: \"80%\" }}\r\n                            strokeColor={{\r\n                                '0%': 'rgb(11,110,239)',\r\n                                '100%': 'rgb(28,244,249)'\r\n                            }} />\r\n                    </div>\r\n                    <div className={style.efficiencyManagementbar}>\r\n                        <div className={style.efficiencyManagementTitle}>湿度：53667.4KW</div>\r\n                        <Progress percent={70} status=\"active\" showInfo={false}\r\n                            style={{ width: \"80%\" }}\r\n                            strokeColor={{\r\n                                '0%': 'rgb(11,110,239)',\r\n                                '100%': 'rgb(28,244,249)'\r\n                            }} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}