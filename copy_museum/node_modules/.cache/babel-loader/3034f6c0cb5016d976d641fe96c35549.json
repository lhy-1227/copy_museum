{"ast":null,"code":"import _classCallCheck from \"E:\\\\web\\\\copy_museum\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"E:\\\\web\\\\copy_museum\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"E:\\\\web\\\\copy_museum\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"E:\\\\web\\\\copy_museum\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"E:\\\\web\\\\copy_museum\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"E:\\\\web\\\\copy_museum\\\\src\\\\Components\\\\VenueService\\\\SmartToilet\\\\ChartLeft\\\\ConsumerGoodsCost.js\";\nimport React from \"react\";\nimport ReactEcharts from \"echarts-for-react\";\n\nvar ConsumerGoodsCost =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ConsumerGoodsCost, _React$Component);\n\n  function ConsumerGoodsCost(props) {\n    var _this;\n\n    _classCallCheck(this, ConsumerGoodsCost);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ConsumerGoodsCost).call(this, props));\n\n    _this.getOption = function (params) {\n      var getData = function getData() {\n        var res = [];\n        var colorList = [\"rgb(28,244,249)\", \"rgb(0,188,255)\", \"rgb(0,110,227)\", \"rgb(0,83,229)\"];\n\n        for (var i = 0; i < params.data.length; i++) {\n          res.push({\n            name: params.names[i],\n            value: params.data[i],\n            itemStyle: {\n              normal: {\n                color: colorList[i]\n              }\n            }\n          });\n        }\n\n        return res;\n      };\n\n      return {\n        width: \"100%\",\n        height: \"100%\",\n        tooltip: {\n          trigger: 'item',\n          formatter: \"{b} <br/> {c}\"\n        },\n        series: [{\n          type: 'pie',\n          center: [\"51%\", \"55%\"],\n          radius: '55%',\n          hoverAnimation: true,\n          data: getData(),\n          label: {\n            normal: {\n              show: true,\n              fontSize: 16,\n              color: 'rgb(28,244,249)',\n              formatter: function formatter(params) {\n                var str = '';\n\n                switch (params.name) {\n                  case '卫生纸':\n                    str = params.value + '\\n' + params.name;\n                    break;\n\n                  case '清洁工具':\n                    str = params.value + '\\n' + params.name;\n                    break;\n\n                  case '洗手液':\n                    str = params.value + '\\n' + params.name;\n                    break;\n\n                  case '灭火器':\n                    str = params.value + '\\n' + params.name;\n                    break;\n\n                  default:\n                    str = '';\n                }\n\n                return str;\n              }\n            }\n          },\n          labelLine: {\n            normal: {\n              show: true\n            }\n          }\n        }]\n      };\n    };\n\n    _this.state = {};\n    return _this;\n  }\n\n  _createClass(ConsumerGoodsCost, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(ReactEcharts, {\n        option: this.getOption({\n          data: [253, 102, 65, 11],\n          names: [\"卫生纸\", \"洗手液\", \"清洁工具\", \"灭火器\"]\n        }),\n        style: {\n          height: \"95%\",\n          width: \"99%\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return ConsumerGoodsCost;\n}(React.Component);\n\nexport { ConsumerGoodsCost as default };","map":{"version":3,"sources":["E:\\web\\copy_museum\\src\\Components\\VenueService\\SmartToilet\\ChartLeft\\ConsumerGoodsCost.js"],"names":["React","ReactEcharts","ConsumerGoodsCost","props","getOption","params","getData","res","colorList","i","data","length","push","name","names","value","itemStyle","normal","color","width","height","tooltip","trigger","formatter","series","type","center","radius","hoverAnimation","label","show","fontSize","str","labelLine","state","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport ReactEcharts from \"echarts-for-react\";\r\n\r\nexport default class ConsumerGoodsCost extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n\r\n    getOption = (params) => {\r\n        let getData = () => {\r\n            let res = [];\r\n            let colorList = [\"rgb(28,244,249)\", \"rgb(0,188,255)\", \"rgb(0,110,227)\", \"rgb(0,83,229)\",];\r\n            for (let i = 0; i < params.data.length; i++) {\r\n                res.push(\r\n                    {\r\n                        name: params.names[i],\r\n                        value: params.data[i],\r\n                        itemStyle: {\r\n                            normal: {\r\n                                color: colorList[i]\r\n                            }\r\n                        },\r\n                    }\r\n                );\r\n            }\r\n            return res;\r\n        }\r\n        return {\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n            tooltip: {\r\n                trigger: 'item',\r\n                formatter: \"{b} <br/> {c}\"\r\n            },\r\n            series: [{\r\n                type: 'pie',\r\n                center: [\"51%\", \"55%\"],\r\n                radius: '55%',\r\n                hoverAnimation: true,\r\n                data: getData(),\r\n                label: {\r\n                    normal: {\r\n                        show: true,\r\n                        fontSize: 16,\r\n                        color : 'rgb(28,244,249)',\r\n                        formatter: function(params){\r\n                            var str = '';\r\n                            switch(params.name){\r\n                                case '卫生纸':str = params.value+'\\n'+params.name;break;\r\n                                case '清洁工具':str = params.value+'\\n'+params.name;break;\r\n                                case '洗手液':str = params.value+'\\n'+params.name;break;\r\n                                case '灭火器':str = params.value+'\\n'+params.name;break;\r\n                                default :str = '';\r\n                            }\r\n                            return str\r\n                        },\r\n                    }\r\n                },\r\n                labelLine: {\r\n                    normal: {\r\n                        show: true,\r\n                    }\r\n                },\r\n            }]\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <ReactEcharts\r\n                option={this.getOption({ data: [253, 102, 65, 11], names: [\"卫生纸\", \"洗手液\", \"清洁工具\", \"灭火器\"] })}\r\n                style={{ height: \"95%\", width: \"99%\" }}\r\n            />\r\n        );\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}