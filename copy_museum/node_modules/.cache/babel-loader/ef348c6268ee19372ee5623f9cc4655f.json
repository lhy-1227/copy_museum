{"ast":null,"code":"import _classCallCheck from \"E:\\\\web\\\\copy_museum\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"E:\\\\web\\\\copy_museum\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"E:\\\\web\\\\copy_museum\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"E:\\\\web\\\\copy_museum\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"E:\\\\web\\\\copy_museum\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"E:\\\\web\\\\copy_museum\\\\src\\\\Components\\\\VenueService\\\\ParkingArea\\\\Content\\\\Content.js\";\nimport React, { PureComponent } from 'react';\nimport ReactEcharts from \"echarts-for-react\";\nimport echarts from 'echarts';\nimport chinaJson from 'echarts/map/json/china.json';\necharts.registerMap('china', chinaJson);\nvar chinaGeoCoordMap = {\n  '黑龙江': [127.9688, 45.368],\n  '内蒙古': [110.3467, 41.4899],\n  '北京市': [116.4551, 40.2539],\n  \"陕西\": [109.1162, 34.2004],\n  \"甘肃\": [103.5901, 36.3043],\n  \"新疆\": [87.9236, 43.5883],\n  \"西藏\": [91.11, 29.97],\n  \"四川\": [103.9526, 30.7617],\n  \"山东\": [117.1582, 36.8701],\n  \"福建\": [119.4543, 25.9222],\n  \"湖南\": [113.0823, 28.2568],\n  \"海南\": [110.3893, 19.8516],\n  '上海': [121.4648, 31.2891]\n};\nvar chinaDatas = [[{\n  name: '黑龙江',\n  value: 0\n}], [{\n  name: '内蒙古',\n  value: 0\n}], [{\n  name: '陕西',\n  value: 0\n}], [{\n  name: '甘肃',\n  value: 0\n}], [{\n  name: '新疆',\n  value: 0\n}], [{\n  name: '西藏',\n  value: 0\n}], [{\n  name: '四川',\n  value: 0\n}], [{\n  name: '山东',\n  value: 0\n}], [{\n  name: '福建',\n  value: 0\n}], [{\n  name: '湖南',\n  value: 0\n}], [{\n  name: '海南',\n  value: 0\n}], [{\n  name: '上海',\n  value: 0\n}]];\n\nvar convertData = function convertData(data) {\n  var res = [];\n\n  for (var i = 0; i < data.length; i++) {\n    var dataItem = data[i];\n    var fromCoord = chinaGeoCoordMap[dataItem[0].name];\n    var toCoord = [116.4551, 40.2539];\n\n    if (fromCoord && toCoord) {\n      res.push([{\n        coord: fromCoord,\n        value: dataItem[0].value\n      }, {\n        coord: toCoord\n      }]);\n    }\n  }\n\n  return res;\n};\n\nvar series = [];\n[['北京市', chinaDatas]].forEach(function (item) {\n  series.push({\n    type: 'lines',\n    zlevel: 2,\n    effect: {\n      show: true,\n      period: 4,\n      trailLength: 0.02,\n      symbol: 'arrow',\n      symbolSize: 5\n    },\n    lineStyle: {\n      normal: {\n        width: 1,\n        opacity: .5,\n        curveness: .3,\n        color: \"rgb(28,244,249)\"\n      }\n    },\n    data: convertData(item[1])\n  }, {\n    type: 'effectScatter',\n    coordinateSystem: 'geo',\n    zlevel: 2,\n    rippleEffect: {\n      period: 1,\n      brushType: 'stroke',\n      scale: 1\n    },\n    label: {\n      normal: {\n        show: true,\n        position: 'right',\n        offset: [5, 0],\n        formatter: function formatter(params) {\n          return params.data.name;\n        },\n        fontSize: 13,\n        color: \"rgb(0,188,255)\"\n      },\n      emphasis: {\n        show: true\n      }\n    },\n    symbol: 'circle',\n    symbolSize: function symbolSize(val) {\n      return 5 + val[2] * 5;\n    },\n    itemStyle: {\n      normal: {\n        show: false,\n        color: 'rgb(28,244,249)'\n      }\n    },\n    data: item[1].map(function (dataItem) {\n      return {\n        name: dataItem[0].name,\n        value: chinaGeoCoordMap[dataItem[0].name].concat([dataItem[0].value])\n      };\n    })\n  }, {\n    type: 'scatter',\n    coordinateSystem: 'geo',\n    zlevel: 2,\n    rippleEffect: {\n      period: 4,\n      brushType: 'stroke',\n      scale: 4\n    },\n    label: {\n      normal: {\n        show: true,\n        position: 'right',\n        formatter: '{b}',\n        textStyle: {\n          color: \"rgb(229,195,69)\"\n        },\n        fontSize: 16\n      },\n      emphasis: {\n        show: true,\n        color: \"#f60\"\n      }\n    },\n    symbol: 'pin',\n    symbolSize: 30,\n    data: [{\n      name: item[0],\n      value: chinaGeoCoordMap[item[0]].concat([10])\n    }]\n  });\n});\n\nvar VenueServiceParkingContent =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  _inherits(VenueServiceParkingContent, _PureComponent);\n\n  function VenueServiceParkingContent() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, VenueServiceParkingContent);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(VenueServiceParkingContent)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.getOption = function () {\n      return {\n        backgroundColor: \"rgba(0,0,0,0)\",\n        geo: {\n          map: 'china',\n          zoom: 1.1,\n          label: {\n            emphasis: {\n              show: false\n            }\n          },\n          roam: true,\n          itemStyle: {\n            normal: {\n              color: 'rgb(2,48,115)',\n              borderColor: 'rgb(0,188,255)',\n              borderWidth: 1\n            },\n            emphasis: {\n              color: 'rgb(12,77,142)'\n            }\n          }\n        },\n        series: series,\n        color: \"rgb(229,195,69)\"\n      };\n    };\n\n    return _this;\n  }\n\n  _createClass(VenueServiceParkingContent, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(ReactEcharts, {\n        option: this.getOption(),\n        style: {\n          height: \"90%\",\n          position: \"relative\",\n          top: \"5%\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return VenueServiceParkingContent;\n}(PureComponent);\n\nexport { VenueServiceParkingContent as default };","map":{"version":3,"sources":["E:\\web\\copy_museum\\src\\Components\\VenueService\\ParkingArea\\Content\\Content.js"],"names":["React","PureComponent","ReactEcharts","echarts","chinaJson","registerMap","chinaGeoCoordMap","chinaDatas","name","value","convertData","data","res","i","length","dataItem","fromCoord","toCoord","push","coord","series","forEach","item","type","zlevel","effect","show","period","trailLength","symbol","symbolSize","lineStyle","normal","width","opacity","curveness","color","coordinateSystem","rippleEffect","brushType","scale","label","position","offset","formatter","params","fontSize","emphasis","val","itemStyle","map","concat","textStyle","VenueServiceParkingContent","getOption","backgroundColor","geo","zoom","roam","borderColor","borderWidth","height","top"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react';\r\nimport ReactEcharts from \"echarts-for-react\";\r\nimport echarts from 'echarts';\r\nimport chinaJson from 'echarts/map/json/china.json';\r\n\r\necharts.registerMap('china', chinaJson);\r\n\r\nvar chinaGeoCoordMap = {\r\n    '黑龙江': [127.9688, 45.368],\r\n    '内蒙古': [110.3467, 41.4899],\r\n    '北京市': [116.4551, 40.2539],\r\n    \"陕西\": [109.1162, 34.2004],\r\n    \"甘肃\": [103.5901, 36.3043],\r\n    \"新疆\": [87.9236, 43.5883],\r\n    \"西藏\": [91.11, 29.97],\r\n    \"四川\": [103.9526, 30.7617],\r\n    \"山东\": [117.1582, 36.8701],\r\n    \"福建\": [119.4543, 25.9222],\r\n    \"湖南\": [113.0823, 28.2568],\r\n    \"海南\": [110.3893, 19.8516],\r\n    '上海': [121.4648, 31.2891]\r\n};\r\nvar chinaDatas = [\r\n    [{\r\n        name: '黑龙江',\r\n        value: 0\r\n    }], [{\r\n        name: '内蒙古',\r\n        value: 0\r\n    }], [{\r\n        name: '陕西',\r\n        value: 0\r\n    }], [{\r\n        name: '甘肃',\r\n        value: 0\r\n    }], [{\r\n        name: '新疆',\r\n        value: 0\r\n    }], [{\r\n        name: '西藏',\r\n        value: 0\r\n    }], [{\r\n        name: '四川',\r\n        value: 0\r\n    }], [{\r\n        name: '山东',\r\n        value: 0\r\n    }], [{\r\n        name: '福建',\r\n        value: 0\r\n    }], [{\r\n        name: '湖南',\r\n        value: 0\r\n    }], [{\r\n        name: '海南',\r\n        value: 0\r\n    }], [{\r\n        name: '上海',\r\n        value: 0\r\n    }]\r\n];\r\n\r\nvar convertData = function (data) {\r\n    var res = [];\r\n    for (var i = 0; i < data.length; i++) {\r\n        var dataItem = data[i];\r\n        var fromCoord = chinaGeoCoordMap[dataItem[0].name];\r\n        var toCoord = [116.4551, 40.2539];\r\n        if (fromCoord && toCoord) {\r\n            res.push([{\r\n                coord: fromCoord,\r\n                value: dataItem[0].value\r\n            }, {\r\n                coord: toCoord,\r\n            }]);\r\n        }\r\n    }\r\n    return res;\r\n};\r\nvar series = [];\r\n[['北京市', chinaDatas]].forEach(function (item) {\r\n    series.push({\r\n        type: 'lines',\r\n        zlevel: 2,\r\n        effect: {\r\n            show: true,\r\n            period: 4,\r\n            trailLength: 0.02,\r\n            symbol: 'arrow',\r\n            symbolSize: 5,\r\n        },\r\n        lineStyle: {\r\n            normal: {\r\n                width: 1,\r\n                opacity: .5,\r\n                curveness: .3,\r\n                color: \"rgb(28,244,249)\"\r\n            }\r\n        },\r\n        data: convertData(item[1])\r\n    }, {\r\n            type: 'effectScatter',\r\n            coordinateSystem: 'geo',\r\n            zlevel: 2,\r\n            rippleEffect: {\r\n                period: 1,\r\n                brushType: 'stroke',\r\n                scale: 1\r\n            },\r\n            label: {\r\n                normal: {\r\n                    show: true,\r\n                    position: 'right',\r\n                    offset: [5, 0],\r\n                    formatter: function (params) {\r\n                        return params.data.name;\r\n                    },\r\n                    fontSize: 13,\r\n                    color: \"rgb(0,188,255)\"\r\n                },\r\n                emphasis: {\r\n                    show: true\r\n                }\r\n            },\r\n            symbol: 'circle',\r\n            symbolSize: function (val) {\r\n                return 5 + val[2] * 5;\r\n            },\r\n            itemStyle: {\r\n                normal: {\r\n                    show: false,\r\n                    color: 'rgb(28,244,249)'\r\n                }\r\n            },\r\n            data: item[1].map(function (dataItem) {\r\n                return {\r\n                    name: dataItem[0].name,\r\n                    value: chinaGeoCoordMap[dataItem[0].name].concat([dataItem[0].value])\r\n                };\r\n            }),\r\n        },\r\n        {\r\n            type: 'scatter',\r\n            coordinateSystem: 'geo',\r\n            zlevel: 2,\r\n            rippleEffect: {\r\n                period: 4,\r\n                brushType: 'stroke',\r\n                scale: 4\r\n            },\r\n            label: {\r\n                normal: {\r\n                    show: true,\r\n                    position: 'right',\r\n                    formatter: '{b}',\r\n                    textStyle: {\r\n                        color: \"rgb(229,195,69)\"\r\n                    },\r\n                    fontSize: 16\r\n                },\r\n                emphasis: {\r\n                    show: true,\r\n                    color: \"#f60\"\r\n                }\r\n            },\r\n            symbol: 'pin',\r\n            symbolSize: 30,\r\n            data: [{\r\n                name: item[0],\r\n                value: chinaGeoCoordMap[item[0]].concat([10]),\r\n            }],\r\n        }\r\n    );\r\n});\r\n\r\nexport default class VenueServiceParkingContent extends PureComponent {\r\n    getOption = () => {\r\n        return {\r\n            backgroundColor: \"rgba(0,0,0,0)\",\r\n            geo: {\r\n                map: 'china',\r\n                zoom: 1.1,\r\n                label: {\r\n                    emphasis: {\r\n                        show: false\r\n                    }\r\n                },\r\n                roam: true,\r\n                itemStyle: {\r\n                    normal: {\r\n                        color: 'rgb(2,48,115)',\r\n                        borderColor: 'rgb(0,188,255)',\r\n                        borderWidth: 1\r\n                    },\r\n                    emphasis: {\r\n                        color: 'rgb(12,77,142)'\r\n                    }\r\n                }\r\n            },\r\n            series: series,\r\n            color: \"rgb(229,195,69)\"\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <ReactEcharts\r\n                option={this.getOption()}\r\n                style={{ height: \"90%\", position: \"relative\", top: \"5%\"}}\r\n            />\r\n        );\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}