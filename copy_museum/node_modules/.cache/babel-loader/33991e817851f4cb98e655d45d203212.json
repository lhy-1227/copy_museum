{"ast":null,"code":"import _classCallCheck from \"E:\\\\web\\\\copy_museum\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"E:\\\\web\\\\copy_museum\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"E:\\\\web\\\\copy_museum\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"E:\\\\web\\\\copy_museum\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"E:\\\\web\\\\copy_museum\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"E:\\\\web\\\\copy_museum\\\\src\\\\Components\\\\Tourist\\\\ChartRight\\\\TicketTypes.js\";\nimport React from \"react\";\nimport ReactEcharts from 'echarts-for-react';\n\nvar TicketTypes =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(TicketTypes, _React$Component);\n\n  function TicketTypes(props) {\n    var _this;\n\n    _classCallCheck(this, TicketTypes);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(TicketTypes).call(this, props));\n\n    _this.getOption = function () {\n      var op = {\n        width: '30%',\n        series: [{\n          graphic: {\n            type: 'text',\n            // [ default: image ]用 setOption 首次设定图形元素时必须指定。image, text, circle, sector, ring, polygon, polyline, rect, line, bezierCurve, arc, group,\n            top: 'center',\n            // 描述怎么根据父元素进行定位。top 和 bottom 只有一个可以生效。如果指定 top 或 bottom，则 shape 里的 y、cy 等定位属性不再生效。『父元素』是指：如果是顶层元素，父元素是 echarts 图表容器。如果是 group 的子元素，父元素就是 group 元素。\n            left: 'center',\n            // 同上\n            style: {\n              text: '333',\n              // 文本块文字。可以使用 \\n 来换行。[ default: '' ]\n              fill: '#fff',\n              // 填充色。\n              fontSize: 16,\n              // 字体大小\n              fontWeight: 'bold' // 文字字体的粗细，可选'normal'，'bold'，'bolder'，'lighter'\n\n            }\n          },\n          center: ['20%', '40%'],\n          color: ['rgba(0,0,0,0)', '#0066FF'],\n          type: 'pie',\n          radius: ['50%', '40%'],\n          avoidLabelOverlap: false,\n          label: {\n            normal: {\n              show: false\n            }\n          },\n          labelLine: {\n            normal: {\n              show: false\n            }\n          },\n          data: [{\n            value: 1000 - 333\n          }, {\n            value: 333\n          }]\n        }, {\n          center: ['50%', '40%'],\n          color: ['rgba(0,0,0,0)', '#0099FF'],\n          type: 'pie',\n          radius: ['50%', '40%'],\n          avoidLabelOverlap: false,\n          label: {\n            normal: {\n              show: false\n            }\n          },\n          labelLine: {\n            normal: {\n              show: false\n            }\n          },\n          data: [{\n            value: 1000 - 555\n          }, {\n            value: 555\n          }]\n        }, {\n          center: ['80%', '40%'],\n          color: ['rgba(0,0,0,0)', '#00FFFF'],\n          type: 'pie',\n          radius: ['50%', '40%'],\n          avoidLabelOverlap: false,\n          label: {\n            normal: {\n              show: false\n            }\n          },\n          labelLine: {\n            normal: {\n              show: false\n            }\n          },\n          data: [{\n            value: 1000 - 888\n          }, {\n            value: 888\n          }]\n        }]\n      };\n      return op;\n    };\n\n    _this.state = {};\n    return _this;\n  }\n\n  _createClass(TicketTypes, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(ReactEcharts, {\n        option: this.getOption(),\n        style: {\n          height: '100%',\n          width: '100%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return TicketTypes;\n}(React.Component);\n\nexport { TicketTypes as default };","map":{"version":3,"sources":["E:\\web\\copy_museum\\src\\Components\\Tourist\\ChartRight\\TicketTypes.js"],"names":["React","ReactEcharts","TicketTypes","props","getOption","op","width","series","graphic","type","top","left","style","text","fill","fontSize","fontWeight","center","color","radius","avoidLabelOverlap","label","normal","show","labelLine","data","value","state","height","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport ReactEcharts from 'echarts-for-react';\r\n\r\nexport default class TicketTypes extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n           \r\n        };\r\n    }\r\n  getOption = () => {\r\n\tlet op = {\r\n\t\t\twidth: '30%',\r\n\t\t\tseries: [\r\n\t\t\t\t{\r\n\t\t\t\t\tgraphic: {\r\n\t\t\t\t\t\ttype: 'text',               // [ default: image ]用 setOption 首次设定图形元素时必须指定。image, text, circle, sector, ring, polygon, polyline, rect, line, bezierCurve, arc, group,\r\n\t\t\t\t\t\ttop: 'center',              // 描述怎么根据父元素进行定位。top 和 bottom 只有一个可以生效。如果指定 top 或 bottom，则 shape 里的 y、cy 等定位属性不再生效。『父元素』是指：如果是顶层元素，父元素是 echarts 图表容器。如果是 group 的子元素，父元素就是 group 元素。\r\n\t\t\t\t\t\tleft: 'center',             // 同上\r\n\t\t\t\t\t\tstyle: {\r\n\t\t\t\t\t\t\ttext: '333',       // 文本块文字。可以使用 \\n 来换行。[ default: '' ]\r\n\t\t\t\t\t\t\tfill: '#fff',           // 填充色。\r\n\t\t\t\t\t\t\tfontSize: 16,           // 字体大小\r\n\t\t\t\t\t\t\tfontWeight: 'bold'\t\t// 文字字体的粗细，可选'normal'，'bold'，'bolder'，'lighter'\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\tcenter: ['20%', '40%'],\r\n\t\t\t\t\tcolor: ['rgba(0,0,0,0)','#0066FF'],\r\n\t\t\t\t\ttype:'pie',\r\n\t\t\t\t\tradius: ['50%', '40%'],\r\n\t\t\t\t\tavoidLabelOverlap: false,\r\n\t\t\t\t\tlabel: {\r\n\t\t\t\t\t\tnormal: {\r\n\t\t\t\t\t\t\tshow: false,\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\tlabelLine: {\r\n\t\t\t\t\t\tnormal: {\r\n\t\t\t\t\t\t\tshow: false\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\tdata:[\r\n\t\t\t\t\t\t{value:1000-333},\r\n\t\t\t\t\t\t{value:333}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t]\r\n\t\t\t\t},\r\n\t\t\t\t{\t\r\n\t\t\t\t\tcenter: ['50%', '40%'],\r\n\t\t\t\t\tcolor: ['rgba(0,0,0,0)','#0099FF'],\r\n\t\t\t\t\ttype:'pie',\r\n\t\t\t\t\tradius: ['50%', '40%'],\r\n\t\t\t\t\tavoidLabelOverlap: false,\r\n\t\t\t\t\tlabel: {\r\n\t\t\t\t\t\tnormal: {\r\n\t\t\t\t\t\t\tshow: false,\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\tlabelLine: {\r\n\t\t\t\t\t\tnormal: {\r\n\t\t\t\t\t\t\tshow: false\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\tdata:[\r\n\t\t\t\t\t\t{value:1000-555},\r\n\t\t\t\t\t\t{value:555}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t]\r\n\t\t\t\t},\r\n\t\t\t\t{\t\r\n\t\t\t\t\tcenter: ['80%', '40%'],\r\n\t\t\t\t\tcolor: ['rgba(0,0,0,0)','#00FFFF'],\r\n\t\t\t\t\ttype:'pie',\r\n\t\t\t\t\tradius: ['50%', '40%'],\r\n\t\t\t\t\tavoidLabelOverlap: false,\r\n\t\t\t\t\tlabel: {\r\n\t\t\t\t\t\tnormal: {\r\n\t\t\t\t\t\t\tshow: false,\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\tlabelLine: {\r\n\t\t\t\t\t\tnormal: {\r\n\t\t\t\t\t\t\tshow: false\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\tdata:[\r\n\t\t\t\t\t\t{value:1000-888},\r\n\t\t\t\t\t\t{value:888}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t]\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t}\r\n\t\treturn op;\t\t\r\n\t}\r\n    render() {\r\n        return (\r\n\t\t\t<ReactEcharts option={this.getOption()} style={{height:'100%',width:'100%'}}></ReactEcharts>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}