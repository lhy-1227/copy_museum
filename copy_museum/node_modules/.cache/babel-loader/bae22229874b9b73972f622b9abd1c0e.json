{"ast":null,"code":"import _classCallCheck from \"E:\\\\web\\\\copy_museum\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"E:\\\\web\\\\copy_museum\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"E:\\\\web\\\\copy_museum\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"E:\\\\web\\\\copy_museum\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"E:\\\\web\\\\copy_museum\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"E:\\\\web\\\\copy_museum\\\\src\\\\Components\\\\VenueService\\\\Wifi\\\\ChartLeft\\\\DurationDistributionTrend.js\";\nimport React from \"react\";\nimport ReactEcharts from 'echarts-for-react';\nimport echarts from \"echarts\";\n\nvar DurationDistributionTrend =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(DurationDistributionTrend, _React$Component);\n\n  function DurationDistributionTrend(props) {\n    var _this;\n\n    _classCallCheck(this, DurationDistributionTrend);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(DurationDistributionTrend).call(this, props));\n    _this.state = {};\n    return _this;\n  }\n\n  _createClass(DurationDistributionTrend, [{\n    key: \"getOption\",\n    value: function getOption() {\n      var category = ['0小时', '0.5小时', '1小时', '1.5小时', '2小时', '2.5小时', '3小时', '3.5小时', ''];\n      var lineData = [1000, 9000, 9236, 10000, 9056, 9230, 9264, 9056, 1000];\n      var barData = [0, 450, 600, 400, 650, 300, 500, 300, 0];\n      var rateData = [];\n\n      for (var i = 0; i < 10; i++) {\n        var rate = barData[i] / lineData[i] * 100;\n        rateData[i] = rate.toFixed(2);\n      }\n\n      return {\n        height: \"65%\",\n        width: \"80%\",\n        color: ['rgb(10,102,238)', 'rgb(28,244,249)'],\n        icon: 'rect',\n        legend: {\n          data: ['连接人数', '百分比'],\n          textStyle: {\n            color: \"rgb(10,102,238)\"\n          }\n        },\n        grid: {\n          x: '12%',\n          width: '80%',\n          y: '12%'\n        },\n        xAxis: {\n          data: category,\n          boundaryGap: false,\n          // boundaryGap值为false的时候，折线第一个点在y轴上\n          axisLine: {\n            lineStyle: {\n              color: \"rgb(10,102,238)\"\n            }\n          },\n          axisLabel: {\n            interval: 0,\n            textStyle: {\n              fontSize: 10\n            }\n          }\n        },\n        yAxis: [{\n          name: '人数',\n          max: 700,\n          min: 0,\n          splitLine: {\n            show: false\n          },\n          axisLine: {\n            lineStyle: {\n              color: \"rgb(10,102,238)\"\n            }\n          },\n          axisLabel: {\n            interval: 0\n          },\n          axisTick: {\n            //y轴刻度线\n            show: false\n          }\n        }, {\n          name: '百分比',\n          max: 8,\n          min: 0,\n          splitLine: {\n            show: false\n          },\n          axisLabel: {\n            interval: 0\n          },\n          axisLine: {\n            lineStyle: {\n              color: \"rgb(10,102,238)\"\n            }\n          },\n          axisTick: {\n            //y轴刻度线\n            show: false\n          }\n        }],\n        series: [{\n          name: '百分比',\n          type: 'line',\n          showAllSymbol: true,\n          symbolSize: 8,\n          yAxisIndex: 1,\n          symbol: 'none',\n          //取消折点圆圈\n          itemStyle: {\n            normal: {\n              color: 'rgb(28,244,249)'\n            }\n          },\n          data: rateData\n        }, {\n          name: '连接人数',\n          type: 'bar',\n          barWidth: 15,\n          itemStyle: {\n            normal: {\n              color: new echarts.graphic.LinearGradient(1, 1, 1, 0, //4个参数用于配置渐变色的起止位置, 这4个参数依次对应右/下/左/上四个方位。\n              [{\n                offset: 0,\n                color: 'rgba(0,0,0,0.6)'\n              }, {\n                offset: 1,\n                color: 'rgb(10,102,238)'\n              }]) // color: 'rgb(10,102,238)'\n\n            }\n          },\n          areaStyle: {\n            normal: {}\n          },\n          data: barData\n        }]\n      };\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(ReactEcharts, {\n        option: this.getOption(),\n        style: {\n          width: \"100%\",\n          height: \"90%\",\n          marginTop: \"2%\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return DurationDistributionTrend;\n}(React.Component);\n\nexport default DurationDistributionTrend;","map":{"version":3,"sources":["E:\\web\\copy_museum\\src\\Components\\VenueService\\Wifi\\ChartLeft\\DurationDistributionTrend.js"],"names":["React","ReactEcharts","echarts","DurationDistributionTrend","props","state","category","lineData","barData","rateData","i","rate","toFixed","height","width","color","icon","legend","data","textStyle","grid","x","y","xAxis","boundaryGap","axisLine","lineStyle","axisLabel","interval","fontSize","yAxis","name","max","min","splitLine","show","axisTick","series","type","showAllSymbol","symbolSize","yAxisIndex","symbol","itemStyle","normal","barWidth","graphic","LinearGradient","offset","areaStyle","getOption","marginTop","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport ReactEcharts from 'echarts-for-react';\r\nimport echarts from \"echarts\";\r\n\r\nclass DurationDistributionTrend extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n\r\n    getOption() {\r\n        var category = ['0小时', '0.5小时', '1小时', '1.5小时', '2小时', '2.5小时', '3小时', '3.5小时',''];\r\n        var lineData = [1000, 9000, 9236, 10000, 9056, 9230, 9264, 9056,1000];\r\n        var barData = [0, 450, 600, 400, 650, 300, 500, 300,0];\r\n        var rateData = [];\r\n        for (var i = 0; i < 10; i++) {\r\n            var rate = barData[i] / lineData[i] * 100;\r\n            rateData[i] = rate.toFixed(2);\r\n        }\r\n        return {\r\n            height: \"65%\",\r\n            width: \"80%\",\r\n            color:['rgb(10,102,238)','rgb(28,244,249)'],\r\n            icon: 'rect',\r\n            legend: {\r\n                data: ['连接人数','百分比'],\r\n                textStyle: {\r\n                    color: \"rgb(10,102,238)\",\r\n                }\r\n            },\r\n            grid: {\r\n                x: '12%',\r\n                width: '80%',\r\n                y: '12%',\r\n            },\r\n            xAxis: {\r\n                data: category,\r\n                boundaryGap: false,   // boundaryGap值为false的时候，折线第一个点在y轴上\r\n                axisLine: {\r\n                    lineStyle: {\r\n                        color: \"rgb(10,102,238)\"\r\n                    }\r\n                },\r\n                axisLabel: {\r\n                    interval: 0,\r\n                    textStyle: {\r\n                        fontSize: 10,\r\n                    },\r\n                },\r\n            },\r\n            yAxis: [\r\n                {\r\n                    name: '人数',\r\n                    max: 700,\r\n                    min: 0,\r\n                    splitLine: { show: false },\r\n                    axisLine: {\r\n                        lineStyle: {\r\n                            color: \"rgb(10,102,238)\"\r\n                        }\r\n                    },\r\n                    axisLabel: {\r\n                        interval: 0,\r\n                    },\r\n                    axisTick: {         //y轴刻度线\r\n                        show:false\r\n                    },\r\n                },\r\n                {\r\n                    name: '百分比',\r\n                    max: 8,\r\n                    min: 0,\r\n                    splitLine: { show: false },\r\n                    axisLabel: {\r\n                        interval: 0\r\n                    },\r\n                    axisLine: {\r\n                        lineStyle: {\r\n                            color: \"rgb(10,102,238)\"\r\n                        }\r\n                    },\r\n                    axisTick: {         //y轴刻度线\r\n                        show:false\r\n                    },\r\n                }\r\n            ],\r\n            series: [\r\n                {\r\n                    name: '百分比',\r\n                    type: 'line',\r\n                    showAllSymbol: true,\r\n                    symbolSize: 8,\r\n                    yAxisIndex: 1,\r\n                    symbol: 'none',  //取消折点圆圈\r\n                    itemStyle: {\r\n                        normal: {\r\n                            color: 'rgb(28,244,249)'\r\n                        },\r\n                    },\r\n                    data: rateData\r\n                },\r\n                {\r\n                    name: '连接人数',\r\n                    type: 'bar',\r\n                    barWidth: 15,\r\n                    itemStyle: {\r\n                        normal: {\r\n                            color: new echarts.graphic.LinearGradient(\r\n                                1, 1, 1, 0,         //4个参数用于配置渐变色的起止位置, 这4个参数依次对应右/下/左/上四个方位。\r\n                                [\r\n                                    { offset: 0, color: 'rgba(0,0,0,0.6)' },\r\n                                    { offset: 1, color: 'rgb(10,102,238)' }\r\n                                ]\r\n                            )\r\n                            // color: 'rgb(10,102,238)'\r\n                        }\r\n                    },\r\n                    areaStyle: { \r\n                        normal: {}\r\n                    },\r\n                    data: barData\r\n                }\r\n            ]\r\n        }\r\n    };\r\n\r\n\r\n    render() {\r\n        return (\r\n            <ReactEcharts\r\n                option={this.getOption()}\r\n                style={{ width: \"100%\", height: \"90%\", marginTop: \"2%\" }}\r\n            ></ReactEcharts>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DurationDistributionTrend;"]},"metadata":{},"sourceType":"module"}