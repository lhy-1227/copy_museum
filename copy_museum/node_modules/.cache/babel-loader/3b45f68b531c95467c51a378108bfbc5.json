{"ast":null,"code":"import _classCallCheck from \"E:\\\\web\\\\copy_museum\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"E:\\\\web\\\\copy_museum\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"E:\\\\web\\\\copy_museum\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"E:\\\\web\\\\copy_museum\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"E:\\\\web\\\\copy_museum\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"E:\\\\web\\\\copy_museum\\\\src\\\\Components\\\\VenueService\\\\Wifi\\\\ChartLeft\\\\ConnectionQuantityTrend.js\";\nimport React from \"react\";\nimport ReactEcharts from 'echarts-for-react';\nimport echarts from \"echarts\";\n\nvar ConnectionQuantityTrend =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ConnectionQuantityTrend, _React$Component);\n\n  function ConnectionQuantityTrend(props) {\n    var _this;\n\n    _classCallCheck(this, ConnectionQuantityTrend);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ConnectionQuantityTrend).call(this, props));\n    _this.state = {};\n    return _this;\n  }\n\n  _createClass(ConnectionQuantityTrend, [{\n    key: \"getOption\",\n    value: function getOption() {\n      return {\n        height: \"65%\",\n        width: \"80%\",\n        grid: {\n          top: \"15%\",\n          left: \"13%\"\n        },\n        xAxis: {\n          type: 'category',\n          boundaryGap: false,\n          data: ['00:00', '01:00', '02:00', '03:00', '04:00', '05:00', '06:00', '07:00', '08:00', '09:00', '10:00', '11:00', '12:00', '13:00', '14:00', '15:00', '16:00', '17:00', '18:00', '19:00', '20:00', '21:00', '22:00', '23:00'],\n          axisLabel: {\n            interval: 2\n          },\n          axisLine: {\n            lineStyle: {\n              color: \"rgb(10,102,238)\"\n            }\n          }\n        },\n        yAxis: {\n          name: \"人\",\n          type: 'value',\n          max: 400,\n          min: 0,\n          splitLine: {\n            show: false\n          },\n          axisLine: {\n            lineStyle: {\n              color: \"rgb(10,102,238)\"\n            }\n          },\n          axisTick: {\n            //y轴刻度线\n            show: false\n          }\n        },\n        series: [{\n          data: [0, 0, 0, 0, 0, 0, 0, 33, 66, 100, 300, 300, 98, 150, 95, 98, 80, 120, 100, 70, 30, 30, 20, 10],\n          type: 'line',\n          symbol: 'none',\n          //取消折点圆圈\n          lineStyle: {\n            color: \"rgb(28,244,249)\"\n          },\n          label: {\n            show: true,\n            position: \"top\",\n            color: \"rgb(10,102,238)\"\n          },\n          areaStyle: {\n            normal: {}\n          },\n          itemStyle: {\n            color: new echarts.graphic.LinearGradient(0, 0, 0, 1, //4个参数用于配置渐变色的起止位置, 这4个参数依次对应右/下/左/上四个方位。\n            [{\n              offset: 1,\n              color: 'rgba(0,0,0,0.5)'\n            }, {\n              offset: 0,\n              color: 'rgb(10,102,238)'\n            }])\n          }\n        }]\n      };\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(ReactEcharts, {\n        option: this.getOption(),\n        style: {\n          width: \"100%\",\n          height: \"90%\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return ConnectionQuantityTrend;\n}(React.Component);\n\nexport default ConnectionQuantityTrend;","map":{"version":3,"sources":["E:\\web\\copy_museum\\src\\Components\\VenueService\\Wifi\\ChartLeft\\ConnectionQuantityTrend.js"],"names":["React","ReactEcharts","echarts","ConnectionQuantityTrend","props","state","height","width","grid","top","left","xAxis","type","boundaryGap","data","axisLabel","interval","axisLine","lineStyle","color","yAxis","name","max","min","splitLine","show","axisTick","series","symbol","label","position","areaStyle","normal","itemStyle","graphic","LinearGradient","offset","getOption","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport ReactEcharts from 'echarts-for-react';\r\nimport echarts from \"echarts\";\r\n\r\nclass ConnectionQuantityTrend extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        };\r\n    }\r\n\r\n    getOption() {\r\n        return {\r\n            height: \"65%\",\r\n            width: \"80%\",\r\n            grid: {\r\n                top:\"15%\",\r\n                left: \"13%\"\r\n            },\r\n            xAxis: {\r\n                type: 'category',\r\n                boundaryGap: false,\r\n                data: ['00:00', '01:00', '02:00', '03:00', '04:00', '05:00', '06:00', '07:00', '08:00', '09:00', '10:00', '11:00', \r\n                       '12:00', '13:00', '14:00', '15:00', '16:00', '17:00', '18:00', '19:00', '20:00', '21:00', '22:00', '23:00'],\r\n                axisLabel:{\r\n                    interval: 2\r\n                },\r\n                axisLine: {\r\n                    lineStyle: {\r\n                        color: \"rgb(10,102,238)\"\r\n                    }\r\n                }\r\n            },\r\n            yAxis: {\r\n                name: \"人\",\r\n                type: 'value',\r\n                max: 400,\r\n                min: 0,\r\n                splitLine: {\r\n                    show: false\r\n                },\r\n                axisLine: {\r\n                    lineStyle: {\r\n                        color: \"rgb(10,102,238)\"\r\n                    }\r\n                },\r\n                axisTick: {         //y轴刻度线\r\n                    show:false\r\n                },\r\n            },\r\n            series: [{\r\n                data: [0, 0, 0, 0, 0, 0, 0, 33, 66, 100, 300, 300, 98, 150, 95, 98, 80, 120, 100, 70,30,30,20,10],\r\n                type: 'line',\r\n                symbol: 'none',  //取消折点圆圈\r\n                lineStyle: {\r\n                    color: \"rgb(28,244,249)\"\r\n                },\r\n                label: {\r\n                    show: true,\r\n                    position: \"top\",\r\n                    color: \"rgb(10,102,238)\"\r\n                },\r\n                areaStyle: { \r\n                    normal: {}\r\n                },\r\n                itemStyle: {\r\n                    color: new echarts.graphic.LinearGradient(\r\n                        0, 0, 0, 1,         //4个参数用于配置渐变色的起止位置, 这4个参数依次对应右/下/左/上四个方位。\r\n                        [\r\n                            { offset: 1, color: 'rgba(0,0,0,0.5)' },\r\n                            { offset: 0, color: 'rgb(10,102,238)' }\r\n                        ]\r\n                    )\r\n                }\r\n            }]\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <ReactEcharts\r\n                option={this.getOption()}\r\n                style={{ width: \"100%\", height: \"90%\"}}\r\n            >\r\n            </ReactEcharts>\r\n        )\r\n    }\r\n}\r\nexport default ConnectionQuantityTrend;"]},"metadata":{},"sourceType":"module"}