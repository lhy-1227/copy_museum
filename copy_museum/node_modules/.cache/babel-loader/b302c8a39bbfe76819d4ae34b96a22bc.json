{"ast":null,"code":"import _classCallCheck from \"E:\\\\web\\\\copy_museum\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"E:\\\\web\\\\copy_museum\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"E:\\\\web\\\\copy_museum\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"E:\\\\web\\\\copy_museum\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"E:\\\\web\\\\copy_museum\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"E:\\\\web\\\\copy_museum\\\\src\\\\Components\\\\CulturalRelic\\\\ChartRight\\\\Show.js\";\nimport React from 'react';\nimport ReactEcharts from 'echarts-for-react';\nimport echarts from \"echarts\";\n\nvar Show =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Show, _React$Component);\n\n  function Show(props) {\n    var _this;\n\n    _classCallCheck(this, Show);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Show).call(this, props));\n\n    _this.getOption = function () {\n      var op = {\n        width: \"80%\",\n        height: \"70%\",\n        grid: {\n          top: \"18%\",\n          left: \"15%\"\n        },\n        xAxis: {\n          type: 'category',\n          data: ['1月', '2月', '3月', '4月', '5月', '6月', '7月', '8月', '9月', '10月', '11月', '12月'],\n          axisLabel: {\n            textStyle: {\n              color: '#0066FF' //坐标的字体颜色\n\n            },\n            interval: 1\n          },\n          axisLine: {\n            lineStyle: {\n              color: '#0066FF' //坐标轴的颜色\n\n            }\n          },\n          axisTick: {\n            show: false //隐藏坐标轴的刻度\n\n          }\n        },\n        yAxis: {\n          type: 'value',\n          name: '人数',\n          axisLabel: {\n            textStyle: {\n              color: '#0066FF' //坐标的字体颜色\n\n            }\n          },\n          splitLine: {\n            show: false //去掉背景的网格线\n\n          },\n          axisLine: {\n            lineStyle: {\n              color: '#0066FF' //坐标轴的颜色\n\n            }\n          },\n          axisTick: {\n            show: false //隐藏坐标轴的刻度\n\n          }\n        },\n        series: [{\n          data: [500, 700, 600, 720, 280, 550, 370, 620, 430, 540, 320, 270],\n          type: 'bar',\n          barWidth: '35%',\n          itemStyle: {\n            normal: {\n              color: new echarts.graphic.LinearGradient(1, 1, 1, 0, //4个参数用于配置渐变色的起止位置, 这4个参数依次对应右/下/左/上四个方位。\n              [{\n                offset: 0,\n                color: 'rgba(0,0,0,0.6)'\n              }, {\n                offset: 1,\n                color: 'rgb(10,102,238)'\n              }]),\n              label: {\n                show: true,\n                //开启显示\n                position: 'top',\n                //在上方显示\n                textStyle: {\n                  //数值样式\n                  color: '#00FFFF'\n                }\n              }\n            }\n          }\n        }]\n      };\n      return op;\n    };\n\n    _this.state = {};\n    return _this;\n  }\n\n  _createClass(Show, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(ReactEcharts, {\n        option: this.getOption(),\n        style: {\n          width: \"100%\",\n          height: \"90%\",\n          marginTop: \"2%\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return Show;\n}(React.Component);\n\nexport { Show as default };","map":{"version":3,"sources":["E:\\web\\copy_museum\\src\\Components\\CulturalRelic\\ChartRight\\Show.js"],"names":["React","ReactEcharts","echarts","Show","props","getOption","op","width","height","grid","top","left","xAxis","type","data","axisLabel","textStyle","color","interval","axisLine","lineStyle","axisTick","show","yAxis","name","splitLine","series","barWidth","itemStyle","normal","graphic","LinearGradient","offset","label","position","state","marginTop","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport ReactEcharts from 'echarts-for-react';\r\nimport echarts from \"echarts\";\r\n\r\nexport default class Show extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        };\r\n    }\r\n\r\n    getOption = () => {\r\n\t\tlet op = {\r\n\t\t\twidth: \"80%\",\r\n            height: \"70%\",\r\n\t\t\tgrid: {\r\n\t\t\t\ttop: \"18%\",\r\n                left: \"15%\"\r\n\t\t\t},\r\n\t\t\txAxis: {\r\n\t\t\t\ttype: 'category',\r\n\t\t\t\tdata: ['1月','2月','3月','4月','5月','6月','7月','8月','9月','10月','11月','12月'],\r\n\t\t\t\taxisLabel: {  \r\n\t\t\t\t\ttextStyle:{\r\n\t\t\t\t\t\tcolor:'#0066FF',  //坐标的字体颜色\r\n\t\t\t\t\t},\r\n\t\t\t\t\tinterval:1,\r\n\t\t\t\t},\r\n\t\t\t\taxisLine:{\r\n\t\t\t\t\tlineStyle:{\r\n\t\t\t\t\t\tcolor:'#0066FF',  //坐标轴的颜色\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t\taxisTick:{\r\n\t\t\t\t\tshow:false, //隐藏坐标轴的刻度\r\n\t\t\t\t\t\r\n\t\t\t\t}\t\r\n\t\t\t},\r\n\t\t\tyAxis: {\r\n\t\t\t\ttype: 'value',\r\n\t\t\t\tname: '人数',\r\n\t\t\t\taxisLabel: {\r\n\t\t\t\t\ttextStyle:{\r\n\t\t\t\t\t\tcolor:'#0066FF',  //坐标的字体颜色\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t\tsplitLine:{\r\n\t\t\t\t\tshow:false,  //去掉背景的网格线\r\n\t\t\t\t},\r\n\t\t\t\taxisLine:{\r\n\t\t\t\t\tlineStyle:{\r\n\t\t\t\t\t\tcolor:'#0066FF',  //坐标轴的颜色\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t\taxisTick:{\r\n\t\t\t\t\tshow:false, //隐藏坐标轴的刻度\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tseries: [{\r\n\t\t\t\tdata: [500, 700, 600, 720, 280, 550, 370, 620, 430, 540, 320, 270],\r\n\t\t\t\ttype: 'bar',\r\n\t\t\t\tbarWidth: '35%',\r\n\t\t\t\titemStyle: {\r\n\t\t\t\t\tnormal: {\r\n                        color: new echarts.graphic.LinearGradient(\r\n                            1, 1, 1, 0,         //4个参数用于配置渐变色的起止位置, 这4个参数依次对应右/下/左/上四个方位。\r\n                            [\r\n                                { offset: 0, color: 'rgba(0,0,0,0.6)' },\r\n                                { offset: 1, color: 'rgb(10,102,238)' }\r\n                            ]),\r\n\t\t\t\t\t\tlabel: {\r\n\t\t\t\t\t\t\tshow: true, //开启显示\r\n\t\t\t\t\t\t\tposition: 'top', //在上方显示\r\n\t\t\t\t\t\t\ttextStyle: { //数值样式\r\n\t\t\t\t\t\t\t\tcolor: '#00FFFF'\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}]\r\n\t\t}\r\n\t\treturn op\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <ReactEcharts\r\n                option={this.getOption()}\r\n                style={{ width: \"100%\", height: \"90%\", marginTop: \"2%\" }}\r\n            ></ReactEcharts>\r\n        );\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}