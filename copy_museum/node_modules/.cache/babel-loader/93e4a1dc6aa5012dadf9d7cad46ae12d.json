{"ast":null,"code":"import _classCallCheck from \"E:\\\\web\\\\copy_museum\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"E:\\\\web\\\\copy_museum\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"E:\\\\web\\\\copy_museum\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"E:\\\\web\\\\copy_museum\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"E:\\\\web\\\\copy_museum\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"E:\\\\web\\\\copy_museum\\\\src\\\\Components\\\\Tourist\\\\ChartRight\\\\TicketTypes.js\";\nimport React from \"react\";\nimport ReactEcharts from 'echarts-for-react';\n\nvar TicketTypes =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(TicketTypes, _React$Component);\n\n  function TicketTypes(props) {\n    var _this;\n\n    _classCallCheck(this, TicketTypes);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(TicketTypes).call(this, props));\n\n    _this.getOption = function () {\n      var op = {\n        width: '30%',\n        graphic: [{\n          //环形图中间添加文字\n          type: 'text',\n          //通过不同top值可以设置上下显示\n          left: 'center',\n          top: '45%',\n          style: {\n            text: ['333', '666', '888'],\n            textAlign: 'center',\n            fill: 'blue',\n            //文字的颜色\n            width: 30,\n            height: 30,\n            fontSize: 20,\n            fontFamily: \"Microsoft YaHei\"\n          }\n        }],\n        series: [{\n          center: ['20%', '40%'],\n          color: ['rgba(0,0,0,0)', '#0066FF'],\n          type: 'pie',\n          radius: ['50%', '40%'],\n          avoidLabelOverlap: false,\n          label: {\n            normal: {\n              show: false\n            }\n          },\n          labelLine: {\n            normal: {\n              show: false\n            }\n          },\n          data: [{\n            value: 1000 - 333\n          }, {\n            value: 333\n          }]\n        }, {\n          center: ['50%', '40%'],\n          color: ['rgba(0,0,0,0)', '#0099FF'],\n          type: 'pie',\n          radius: ['50%', '40%'],\n          avoidLabelOverlap: false,\n          label: {\n            normal: {\n              show: false\n            }\n          },\n          labelLine: {\n            normal: {\n              show: false\n            }\n          },\n          data: [{\n            value: 1000 - 555\n          }, {\n            value: 555\n          }]\n        }, {\n          center: ['80%', '40%'],\n          color: ['rgba(0,0,0,0)', '#00FFFF'],\n          type: 'pie',\n          radius: ['50%', '40%'],\n          avoidLabelOverlap: false,\n          label: {\n            normal: {\n              show: false\n            }\n          },\n          labelLine: {\n            normal: {\n              show: false\n            }\n          },\n          data: [{\n            value: 1000 - 888\n          }, {\n            value: 888\n          }]\n        }]\n      };\n      return op;\n    };\n\n    _this.state = {};\n    return _this;\n  }\n\n  _createClass(TicketTypes, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(ReactEcharts, {\n        option: this.getOption(),\n        style: {\n          height: '100%',\n          width: '100%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return TicketTypes;\n}(React.Component);\n\nexport { TicketTypes as default };","map":{"version":3,"sources":["E:\\web\\copy_museum\\src\\Components\\Tourist\\ChartRight\\TicketTypes.js"],"names":["React","ReactEcharts","TicketTypes","props","getOption","op","width","graphic","type","left","top","style","text","textAlign","fill","height","fontSize","fontFamily","series","center","color","radius","avoidLabelOverlap","label","normal","show","labelLine","data","value","state","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport ReactEcharts from 'echarts-for-react';\r\n\r\nexport default class TicketTypes extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n           \r\n        };\r\n    }\r\n  getOption = () => {\r\n\tlet op = {\r\n\t\t\twidth: '30%',\r\n\t\t\tgraphic: [{ //环形图中间添加文字\r\n\t\t\t\ttype: 'text', //通过不同top值可以设置上下显示\r\n\t\t\t\tleft: 'center',\r\n\t\t\t\ttop: '45%',\r\n\t\t\t\tstyle: {\r\n\t\t\t\t\ttext: ['333','666','888'],\r\n\t\t\t\t\ttextAlign: 'center',\r\n\t\t\t\t\tfill: 'blue', //文字的颜色\r\n\t\t\t\t\twidth: 30,\r\n\t\t\t\t\theight: 30,\r\n\t\t\t\t\tfontSize: 20,\r\n\t\t\t\t\tfontFamily: \"Microsoft YaHei\"\r\n\t\t\t\t}\r\n\t\t\t}],\r\n\t\t\tseries: [\r\n\t\t\t\t{\r\n\t\t\t\t\t\r\n\t\t\t\t\tcenter: ['20%', '40%'],\r\n\t\t\t\t\tcolor: ['rgba(0,0,0,0)','#0066FF'],\r\n\t\t\t\t\ttype:'pie',\r\n\t\t\t\t\tradius: ['50%', '40%'],\r\n\t\t\t\t\tavoidLabelOverlap: false,\r\n\t\t\t\t\tlabel: {\r\n\t\t\t\t\t\tnormal: {\r\n\t\t\t\t\t\t\tshow: false,\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\tlabelLine: {\r\n\t\t\t\t\t\tnormal: {\r\n\t\t\t\t\t\t\tshow: false\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\tdata:[\r\n\t\t\t\t\t\t{value:1000-333},\r\n\t\t\t\t\t\t{value:333}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t]\r\n\t\t\t\t},\r\n\t\t\t\t{\t\r\n\t\t\t\t\tcenter: ['50%', '40%'],\r\n\t\t\t\t\tcolor: ['rgba(0,0,0,0)','#0099FF'],\r\n\t\t\t\t\ttype:'pie',\r\n\t\t\t\t\tradius: ['50%', '40%'],\r\n\t\t\t\t\tavoidLabelOverlap: false,\r\n\t\t\t\t\tlabel: {\r\n\t\t\t\t\t\tnormal: {\r\n\t\t\t\t\t\t\tshow: false,\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\tlabelLine: {\r\n\t\t\t\t\t\tnormal: {\r\n\t\t\t\t\t\t\tshow: false\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\tdata:[\r\n\t\t\t\t\t\t{value:1000-555},\r\n\t\t\t\t\t\t{value:555}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t]\r\n\t\t\t\t},\r\n\t\t\t\t{\t\r\n\t\t\t\t\tcenter: ['80%', '40%'],\r\n\t\t\t\t\tcolor: ['rgba(0,0,0,0)','#00FFFF'],\r\n\t\t\t\t\ttype:'pie',\r\n\t\t\t\t\tradius: ['50%', '40%'],\r\n\t\t\t\t\tavoidLabelOverlap: false,\r\n\t\t\t\t\tlabel: {\r\n\t\t\t\t\t\tnormal: {\r\n\t\t\t\t\t\t\tshow: false,\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\tlabelLine: {\r\n\t\t\t\t\t\tnormal: {\r\n\t\t\t\t\t\t\tshow: false\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\tdata:[\r\n\t\t\t\t\t\t{value:1000-888},\r\n\t\t\t\t\t\t{value:888}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t]\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t}\r\n\t\treturn op;\t\t\r\n\t}\r\n    render() {\r\n        return (\r\n\t\t\t<ReactEcharts option={this.getOption()} style={{height:'100%',width:'100%'}}></ReactEcharts>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}